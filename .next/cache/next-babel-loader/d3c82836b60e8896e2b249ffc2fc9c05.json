{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/ahroidlife/Documents/nextjs/blog/components/atoms/views/view.jsx\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport StyledView from './view.styles.jsx';\nimport { any, string } from 'prop-types';\n\nvar View = function View(_ref) {\n  var ref = _ref.ref,\n      children = _ref.children,\n      style = _ref.style,\n      isEqualFlex = _ref.isEqualFlex,\n      flexValue = _ref.flexValue,\n      direction = _ref.direction,\n      justify = _ref.justify,\n      overflow = _ref.overflow,\n      isBoxShadow = _ref.isBoxShadow,\n      width = _ref.width,\n      isEqualWidth = _ref.isEqualWidth,\n      isEqualHeight = _ref.isEqualHeight,\n      height = _ref.height,\n      radius = _ref.radius,\n      backgroundColor = _ref.backgroundColor,\n      isEqualBackground = _ref.isEqualBackground,\n      isEqualDirection = _ref.isEqualDirection,\n      position = _ref.position,\n      bottom = _ref.bottom,\n      margin = _ref.margin,\n      maxWidth = _ref.maxWidth,\n      top = _ref.top,\n      left = _ref.left,\n      border = _ref.border,\n      isPadding = _ref.isPadding,\n      props = _objectWithoutProperties(_ref, [\"ref\", \"children\", \"style\", \"isEqualFlex\", \"flexValue\", \"direction\", \"justify\", \"overflow\", \"isBoxShadow\", \"width\", \"isEqualWidth\", \"isEqualHeight\", \"height\", \"radius\", \"backgroundColor\", \"isEqualBackground\", \"isEqualDirection\", \"position\", \"bottom\", \"margin\", \"maxWidth\", \"top\", \"left\", \"border\", \"isPadding\"]);\n\n  return __jsx(StyledView, _extends({\n    ref: ref,\n    style: style,\n    isBoxShadow: isBoxShadow,\n    isEqualFlex: isEqualFlex,\n    width: width,\n    height: height,\n    isEqualWidth: isEqualWidth,\n    isEqualHeight: isEqualHeight,\n    radius: radius,\n    backgroundColor: backgroundColor,\n    isEqualBackground: isEqualBackground,\n    flexValue: flexValue,\n    justify: justify,\n    overflow: overflow,\n    position: position,\n    bottom: bottom,\n    direction: direction,\n    isEqualDirection: isEqualDirection,\n    margin: margin,\n    maxWidth: maxWidth,\n    top: top,\n    left: left,\n    border: border,\n    isPadding: isPadding\n  }, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }), children);\n};\n\nView.propTypes = {\n  style: any,\n  width: string,\n  height: string,\n  isEqualWidth: string,\n  isEqualHeight: string,\n  isEqualFlex: string,\n  direction: string,\n  isEqualDirection: string,\n  justify: string,\n  flexValue: string,\n  position: string,\n  margin: string,\n  overflow: string,\n  backgroundColor: string,\n  isEqualBackground: string,\n  isBoxShadow: string,\n  radius: string,\n  maxWidth: string,\n  top: string,\n  left: string\n};\nexport default View;","map":{"version":3,"sources":["/Users/ahroidlife/Documents/nextjs/blog/components/atoms/views/view.jsx"],"names":["React","StyledView","any","string","View","ref","children","style","isEqualFlex","flexValue","direction","justify","overflow","isBoxShadow","width","isEqualWidth","isEqualHeight","height","radius","backgroundColor","isEqualBackground","isEqualDirection","position","bottom","margin","maxWidth","top","left","border","isPadding","props","propTypes"],"mappings":"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","sourcesContent":["import React from 'react'\n\nimport StyledView from './view.styles.jsx'\nimport { any, string } from 'prop-types'\n\nconst View = ({ \n    ref,\n    children, \n    style, \n    isEqualFlex,\n    flexValue, \n    direction,\n    justify,\n    overflow, \n    isBoxShadow, \n    width, \n    isEqualWidth, \n    isEqualHeight, \n    height, \n    radius, \n    backgroundColor, \n    isEqualBackground,\n    isEqualDirection, \n    position,\n    bottom,\n    margin,\n    maxWidth,\n    top,\n    left,\n    border,\n    isPadding,\n    ...props}) => {\n\n        \n\n    return (\n        <StyledView\n        ref={ref} \n        style={style} \n        isBoxShadow={isBoxShadow} \n        isEqualFlex={isEqualFlex}\n        width={width}\n        height={height}\n        isEqualWidth={isEqualWidth}\n        isEqualHeight={isEqualHeight}\n        radius={radius}\n        backgroundColor={backgroundColor}\n        isEqualBackground={isEqualBackground}\n        flexValue={flexValue}\n        justify={justify}\n        overflow={overflow}\n        position={position}\n        bottom={bottom}\n        direction={direction}\n        isEqualDirection={isEqualDirection}\n        margin={margin}\n        maxWidth={maxWidth}\n        top={top}\n        left={left}\n        border={border}\n        isPadding={isPadding}\n        {...props}>\n            {children}\n        </StyledView>\n    )\n}\n\nView.propTypes = {\n    style: any,\n    width: string,\n    height: string,\n    isEqualWidth: string,\n    isEqualHeight: string,\n    isEqualFlex: string,\n    direction: string,\n    isEqualDirection: string,\n    justify: string,\n    flexValue: string,\n    position: string,\n    margin: string,\n    overflow: string,\n    backgroundColor: string,\n    isEqualBackground: string,\n    isBoxShadow: string,\n    radius: string,\n    maxWidth: string,\n    top: string,\n    left: string\n}\n\nexport default View"]},"metadata":{},"sourceType":"module"}