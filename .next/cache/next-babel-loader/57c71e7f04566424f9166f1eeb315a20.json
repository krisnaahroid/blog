{"ast":null,"code":"var _jsxFileName = \"/Users/ahroidlife/Documents/nextjs/blog/pages/stories/[slug].jsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { BlogLayout } from \"../../components/templates/layouts\";\nimport { Container, View, Text, Image } from '../../components/atoms';\nimport './stories.scss';\nimport Link from 'next/link';\nimport { useRouter } from 'next/dist/client/router';\nimport { useSelector } from 'react-redux';\nimport * as Markdown from 'react-markdown';\nimport { documentToHtmlString } from '@contentful/rich-text-html-renderer';\nimport { documentToReactComponents } from '@contentful/rich-text-react-renderer';\nimport { BLOCKS, MARKS } from '@contentful/rich-text-types';\n\nconst Bold = ({\n  children\n}) => __jsx(\"p\", {\n  className: \"bold\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 32\n  }\n}, children);\n\nconst Story = props => {\n  const router = useRouter();\n  const {\n    0: slug,\n    1: setSlug\n  } = useState('');\n  const story = useSelector(state => state.stories.story.fields);\n  const options = {\n    renderMark: {\n      [MARKS.BOLD]: text => __jsx(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 33\n        }\n      }, text)\n    },\n    renderNode: {\n      [BLOCKS.PARAGRAPH]: (node, children) => __jsx(Text, {\n        variant: \"grey\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 51\n        }\n      }, children)\n    }\n  };\n  const content = documentToReactComponents(story.body, options);\n  useEffect(() => {\n    let param = router.query.slug;\n    setSlug(param);\n    console.log(\"STATE :: \", story);\n  });\n  return __jsx(BlogLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, __jsx(Container, {\n    className: \"story-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, __jsx(View, {\n    className: \"story-content\",\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, __jsx(Link, {\n    href: \"/stories\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }\n  }, __jsx(View, {\n    className: \"story-close-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 29\n    }\n  }, __jsx(Image, {\n    src: \"/static/illustrations/close-dark.svg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 33\n    }\n  })))), __jsx(View, {\n    className: \"story-content-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }, __jsx(\"h1\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 25\n    }\n  }, story.title), __jsx(Text, {\n    className: \"subtitle\",\n    family: \"quicksand\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 25\n    }\n  }, story.subtitle), __jsx(Image, {\n    src: `https:${story.heroImage.fields.file.url}`,\n    className: \"hero-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 25\n    }\n  })), __jsx(View, {\n    className: \"story-content-body\",\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }, content.replace(/\\n/g, '<br/>')))));\n};\n\nexport default Story;","map":{"version":3,"sources":["/Users/ahroidlife/Documents/nextjs/blog/pages/stories/[slug].jsx"],"names":["React","useEffect","useState","BlogLayout","Container","View","Text","Image","Link","useRouter","useSelector","Markdown","documentToHtmlString","documentToReactComponents","BLOCKS","MARKS","Bold","children","Story","props","router","slug","setSlug","story","state","stories","fields","options","renderMark","BOLD","text","renderNode","PARAGRAPH","node","content","body","param","query","console","log","title","subtitle","heroImage","file","url","replace"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { BlogLayout } from \"../../components/templates/layouts\";\nimport { Container, View, Text, Image} from '../../components/atoms'\n\nimport './stories.scss'\nimport Link from 'next/link';\nimport { useRouter } from 'next/dist/client/router';\nimport { useSelector } from 'react-redux';\nimport * as Markdown from 'react-markdown'\nimport { documentToHtmlString } from '@contentful/rich-text-html-renderer';\nimport { documentToReactComponents } from '@contentful/rich-text-react-renderer';\nimport { BLOCKS, MARKS } from '@contentful/rich-text-types';\n\nconst Bold = ({ children }) => <p className=\"bold\">{children}</p>;\n\n\nconst Story = (props) => {\n    const router = useRouter()\n    const [slug, setSlug] = useState('')\n    const story = useSelector(state => state.stories.story.fields)\n\n    const options = {\n        renderMark: {\n          [MARKS.BOLD]: text => <Text>{text}</Text>,\n        },\n        renderNode: {\n          [BLOCKS.PARAGRAPH]: (node, children) => <Text variant=\"grey\">{children}</Text>,\n        }\n      };\n    const content = documentToReactComponents(story.body, options)\n\n    useEffect(() => {\n        let param = router.query.slug\n        setSlug(param)\n        console.log(\"STATE :: \",story)\n    })\n    return (\n        <BlogLayout>\n            <Container className=\"story-container\">\n                <View className=\"story-content\" direction=\"column\">\n                    <Link href=\"/stories\">\n                        <a>\n                            <View className=\"story-close-btn\">\n                                <Image src=\"/static/illustrations/close-dark.svg\"/>\n                            </View>\n                        </a>\n                    </Link>\n                    <View className=\"story-content-header\">\n                        <h1 className=\"title\">{story.title}</h1>\n                        <Text className=\"subtitle\" family=\"quicksand\">{story.subtitle}</Text>\n                        <Image src={`https:${story.heroImage.fields.file.url}`} className=\"hero-image\"/>\n                    </View>\n                    <View className=\"story-content-body\" direction=\"column\">\n                        {/* <Markdown source={content} /> */}\n                        {content.replace(/\\n/g, '<br/>')}\n                    </View>\n                </View>\n            </Container>\n        </BlogLayout>\n    )\n}\n\nexport default Story"]},"metadata":{},"sourceType":"module"}