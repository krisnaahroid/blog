{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/ahroidlife/Documents/nextjs/blog/pages/stories/[slug].jsx\";\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { BlogLayout } from \"../../components/templates/layouts\";\nimport { Container, View, Text, Image, Badge } from '../../components/atoms';\nimport './stories.scss';\nimport Link from 'next/link';\nimport { useRouter } from 'next/dist/client/router';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as Markdown from 'react-markdown';\nimport { documentToHtmlString } from '@contentful/rich-text-html-renderer';\nimport { documentToReactComponents } from '@contentful/rich-text-react-renderer';\nimport { BLOCKS, MARKS } from '@contentful/rich-text-types';\nimport actions from '../../store/modules/stories/actions';\n\nvar Bold = function Bold(_ref) {\n  var children = _ref.children;\n  return __jsx(\"p\", {\n    className: \"bold\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 32\n    }\n  }, children);\n};\n\nvar client = require('contentful').createClient({\n  space: process.env.SPACE_ID,\n  accessToken: process.env.ACCESS_TOKEN\n});\n\nvar Story = function Story(props) {\n  var _renderNode;\n\n  var router = useRouter();\n\n  var _useState = useState(''),\n      slug = _useState[0],\n      setSlug = _useState[1];\n\n  var story = useSelector(function (state) {\n    return state.stories.story[0].fields;\n  });\n  var dispatch = useDispatch();\n\n  function getSingle() {\n    var entry;\n    return _regeneratorRuntime.async(function getSingle$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(client.getEntries({\n              content_type: 'story',\n              'fields.slug[match]': 'frontend-component-driven-development'\n            }));\n\n          case 2:\n            entry = _context.sent;\n\n            if (!entry.items) {\n              _context.next = 5;\n              break;\n            }\n\n            return _context.abrupt(\"return\", entry.items);\n\n          case 5:\n            console.log(\"Error getting Entries for \".concat(contentType.name, \".\"));\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  useEffect(function () {\n    var param = router.query.slug;\n    setSlug(param); // getSingle(param)\n  }, []);\n  console.log(story.image.fields);\n  var options = {\n    renderMark: _defineProperty({}, MARKS.BOLD, function (text) {\n      return __jsx(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 33\n        }\n      }, text);\n    }),\n    renderNode: (_renderNode = {}, _defineProperty(_renderNode, BLOCKS.PARAGRAPH, function (node, children) {\n      return __jsx(Text, {\n        variant: \"grey\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 51\n        }\n      }, children);\n    }), _defineProperty(_renderNode, BLOCKS.EMBEDDED_ASSET, function (node) {\n      // console.log(node)\n      var _node$data$target$fie = node.data.target.fields,\n          description = _node$data$target$fie.description,\n          title = _node$data$target$fie.title,\n          file = _node$data$target$fie.file;\n      return __jsx(\"img\", {\n        src: file.url,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 20\n        }\n      });\n    }), _renderNode),\n    renderText: function renderText(text) {\n      return text.split('\\n').reduce(function (children, textSegment, index) {\n        return [].concat(_toConsumableArray(children), [index > 0 && __jsx(\"br\", {\n          key: index,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 49\n          }\n        }), textSegment]);\n      }, []);\n    }\n  };\n  var content = documentToReactComponents(story.body, options);\n  return __jsx(BlogLayout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, __jsx(Container, {\n    className: \"story-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, __jsx(View, {\n    className: \"story-content\",\n    direction: \"column\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, __jsx(Link, {\n    href: \"/stories\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }, __jsx(\"a\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 25\n    }\n  }, __jsx(View, {\n    className: \"story-close-btn\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 29\n    }\n  }, __jsx(Image, {\n    src: \"/static/illustrations/close-dark.svg\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 33\n    }\n  })))), __jsx(View, {\n    className: \"story-content-header\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, __jsx(\"h1\", {\n    className: \"title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 25\n    }\n  }, story.title), __jsx(Text, {\n    className: \"subtitle\",\n    family: \"quicksand\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 25\n    }\n  }, story.subtitle), __jsx(Image, {\n    src: \"https:\".concat(story.heroImage.fields.file.url),\n    className: \"hero-image\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 25\n    }\n  })), __jsx(View, {\n    className: \"story-content-body\",\n    direction: \"column\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, content), __jsx(View, {\n    className: \"story-content-footer\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }, __jsx(View, {\n    className: \"tags-wrapper\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 25\n    }\n  }, __jsx(Text, {\n    className: \"title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 29\n    }\n  }, \"Tags\"), __jsx(View, {\n    className: \"tags\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 29\n    }\n  }, __jsx(Badge, {\n    title: \"Storybook\",\n    backgroundColor: \"#FFEDED\",\n    color: \"#FF5252\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 33\n    }\n  }), __jsx(Badge, {\n    title: \"React\",\n    backgroundColor: \"#FFEDED\",\n    color: \"#FF5252\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 34\n    }\n  }))), __jsx(View, {\n    className: \"publish-date\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 25\n    }\n  }, __jsx(Text, {\n    className: \"title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 29\n    }\n  }, \"Publish date\"), __jsx(Text, {\n    className: \"subtitle\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 29\n    }\n  }, \"2020-04-28 14:50:00\"))))));\n};\n\nStory.getInitialProps = function _callee(_ref2) {\n  var req, res, json;\n  return _regeneratorRuntime.async(function _callee$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          req = _ref2.req;\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(getSingle());\n\n        case 3:\n          res = _context2.sent;\n          _context2.next = 6;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 6:\n          json = _context2.sent;\n          console.log(\"JSON \", json);\n\n        case 8:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Story;","map":{"version":3,"sources":["/Users/ahroidlife/Documents/nextjs/blog/pages/stories/[slug].jsx"],"names":["React","useEffect","useState","BlogLayout","Container","View","Text","Image","Badge","Link","useRouter","useSelector","useDispatch","Markdown","documentToHtmlString","documentToReactComponents","BLOCKS","MARKS","actions","Bold","children","client","require","createClient","space","process","env","SPACE_ID","accessToken","ACCESS_TOKEN","Story","props","router","slug","setSlug","story","state","stories","fields","dispatch","getSingle","getEntries","content_type","entry","items","console","log","contentType","name","param","query","image","options","renderMark","BOLD","text","renderNode","PARAGRAPH","node","EMBEDDED_ASSET","data","target","description","title","file","url","renderText","split","reduce","textSegment","index","content","body","subtitle","heroImage","getInitialProps","req","res","json"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { BlogLayout } from \"../../components/templates/layouts\";\nimport { Container, View, Text, Image, Badge} from '../../components/atoms'\n\nimport './stories.scss'\nimport Link from 'next/link';\nimport { useRouter } from 'next/dist/client/router';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as Markdown from 'react-markdown'\nimport { documentToHtmlString } from '@contentful/rich-text-html-renderer';\nimport { documentToReactComponents } from '@contentful/rich-text-react-renderer';\nimport { BLOCKS, MARKS } from '@contentful/rich-text-types';\nimport actions from '../../store/modules/stories/actions'\n\nconst Bold = ({ children }) => <p className=\"bold\">{children}</p>;\n\nconst client = require('contentful').createClient({\n    space: process.env.SPACE_ID,\n    accessToken: process.env.ACCESS_TOKEN\n})\n\nconst Story = (props) => {\n    const router = useRouter()\n    const [slug, setSlug] = useState('')\n    const story = useSelector(state => state.stories.story[0].fields)\n\n    const dispatch = useDispatch()\n\n        \n    async function getSingle(){\n        const entry = await client.getEntries({\n            content_type: 'story',\n            'fields.slug[match]': 'frontend-component-driven-development'\n          })\n        \n          if (entry.items) return entry.items\n          console.log(`Error getting Entries for ${contentType.name}.`)\n          \n    }\n\n    useEffect(() => {\n        let param = router.query.slug\n        setSlug(param)\n        \n        // getSingle(param)\n        \n    },[])\n    console.log(story.image.fields)\n\n    const options = {\n        renderMark: {\n          [MARKS.BOLD]: text => <Text>{text}</Text>,\n        },\n        renderNode: {\n          [BLOCKS.PARAGRAPH]: (node, children) => <Text variant=\"grey\">{children}</Text>,\n          [BLOCKS.EMBEDDED_ASSET]: node => {\n            // console.log(node)\n            let { description, title, file } = node.data.target.fields\n\n            return <img src={file.url} />\n          },\n        },\n        renderText: text => {\n            return text.split('\\n').reduce((children, textSegment, index) => {\n              return [...children, index > 0 && <br key={index} />, textSegment];\n            }, []);\n          },\n      };\n\n    const content = documentToReactComponents(story.body, options)\n      \n    return (\n        <BlogLayout>\n            <Container className=\"story-container\">\n                <View className=\"story-content\" direction=\"column\">\n                    <Link href=\"/stories\">\n                        <a>\n                            <View className=\"story-close-btn\">\n                                <Image src=\"/static/illustrations/close-dark.svg\"/>\n                            </View>\n                        </a>\n                    </Link>\n                    <View className=\"story-content-header\">\n                        <h1 className=\"title\">{story.title}</h1>\n                        <Text className=\"subtitle\" family=\"quicksand\">{story.subtitle}</Text>\n                        <Image src={`https:${story.heroImage.fields.file.url}`} className=\"hero-image\"/>\n                    </View>\n                    <View className=\"story-content-body\" direction=\"column\">\n                        {/* <Markdown source={content} /> */}\n                        {content}\n                    </View>\n                    <View className=\"story-content-footer\">\n                        <View className=\"tags-wrapper\">\n                            <Text className=\"title\">Tags</Text>\n                            <View className=\"tags\">\n                                <Badge \n                                title=\"Storybook\"\n                                backgroundColor=\"#FFEDED\"\n                                color=\"#FF5252\"/>\n                                 <Badge \n                                title=\"React\"\n                                backgroundColor=\"#FFEDED\"\n                                color=\"#FF5252\"/>\n                            </View>\n                        </View>\n                        <View className=\"publish-date\">\n                            <Text className=\"title\">Publish date</Text>\n                            <Text className=\"subtitle\">2020-04-28 14:50:00</Text>\n                        </View>\n                    </View>\n                </View>\n            </Container>\n        </BlogLayout>\n    )\n}\n\nStory.getInitialProps = async ({ req }) => {\n    const res = await getSingle()\n    const json = await res.json()\n    console.log(\"JSON \", json)\n  }\n\nexport default Story"]},"metadata":{},"sourceType":"module"}