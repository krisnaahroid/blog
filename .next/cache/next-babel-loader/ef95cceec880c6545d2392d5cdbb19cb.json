{"ast":null,"code":"var _jsxFileName = \"/Users/ahroidlife/Documents/nextjs/blog/pages/stories/[slug].jsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { BlogLayout } from \"../../components/templates/layouts\";\nimport { Container, View, Text, Image, Badge } from '../../components/atoms';\nimport './stories.scss';\nimport Link from 'next/link';\nimport { useRouter } from 'next/dist/client/router';\nimport { useSelector } from 'react-redux';\nimport * as Markdown from 'react-markdown';\nimport { documentToHtmlString } from '@contentful/rich-text-html-renderer';\nimport { documentToReactComponents } from '@contentful/rich-text-react-renderer';\nimport { BLOCKS, MARKS } from '@contentful/rich-text-types';\n\nconst Bold = ({\n  children\n}) => __jsx(\"p\", {\n  className: \"bold\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 32\n  }\n}, children);\n\nconst client = require('contentful').createClient({\n  space: process.env.SPACE_ID,\n  accessToken: process.env.ACCESS_TOKEN\n});\n\nconst Story = props => {\n  const router = useRouter();\n  const {\n    0: slug,\n    1: setSlug\n  } = useState('');\n  const story = useSelector(state => state.stories.story.fields);\n\n  async function getSingle() {\n    const data = await client.getEntries({\n      content_type: 'story',\n      'fields.slug[match]': slug\n    });\n    data.items.forEach(function (entry) {\n      setStory(entry);\n    });\n  }\n\n  const options = {\n    renderMark: {\n      [MARKS.BOLD]: text => __jsx(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 33\n        }\n      }, text)\n    },\n    renderNode: {\n      [BLOCKS.PARAGRAPH]: (node, children) => __jsx(Text, {\n        variant: \"grey\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 51\n        }\n      }, children),\n      [BLOCKS.EMBEDDED_ASSET]: node => {\n        // console.log(node)\n        let {\n          description,\n          title,\n          file\n        } = node.data.target.fields;\n        console.log(file);\n        return __jsx(\"img\", {\n          src: file.url,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 20\n          }\n        });\n      }\n    },\n    renderText: text => {\n      return text.split('\\n').reduce((children, textSegment, index) => {\n        return [...children, index > 0 && __jsx(\"br\", {\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 49\n          }\n        }), textSegment];\n      }, []);\n    }\n  };\n  const content = documentToReactComponents(story.body, options);\n  useEffect(() => {\n    let param = router.query.slug;\n    setSlug(param);\n\n    if (story === null) {\n      getSingle();\n      console.log(\"STATE IS NULL !!\");\n    }\n\n    console.log(\"STATE :: \", story);\n  });\n  return __jsx(BlogLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, __jsx(Container, {\n    className: \"story-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, __jsx(View, {\n    className: \"story-content\",\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, __jsx(Link, {\n    href: \"/stories\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 25\n    }\n  }, __jsx(View, {\n    className: \"story-close-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 29\n    }\n  }, __jsx(Image, {\n    src: \"/static/illustrations/close-dark.svg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 33\n    }\n  })))), __jsx(View, {\n    className: \"story-content-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, __jsx(\"h1\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 25\n    }\n  }, story.title), __jsx(Text, {\n    className: \"subtitle\",\n    family: \"quicksand\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 25\n    }\n  }, story.subtitle), __jsx(Image, {\n    src: `https:${story.heroImage.fields.file.url}`,\n    className: \"hero-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 25\n    }\n  })), __jsx(View, {\n    className: \"story-content-body\",\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  }, content), __jsx(View, {\n    className: \"story-content-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }, __jsx(View, {\n    className: \"tags-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 25\n    }\n  }, __jsx(Text, {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 29\n    }\n  }, \"Tags\"), __jsx(View, {\n    className: \"tags\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 29\n    }\n  }, __jsx(Badge, {\n    title: \"Storybook\",\n    backgroundColor: \"#FFEDED\",\n    color: \"#FF5252\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 33\n    }\n  }), __jsx(Badge, {\n    title: \"React\",\n    backgroundColor: \"#FFEDED\",\n    color: \"#FF5252\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 34\n    }\n  }))), __jsx(View, {\n    className: \"publish-date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 25\n    }\n  }, __jsx(Text, {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 29\n    }\n  }, \"Publish date\"), __jsx(Text, {\n    className: \"subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 29\n    }\n  }, \"2020-04-28 14:50:00\"))))));\n};\n\nexport default Story;","map":{"version":3,"sources":["/Users/ahroidlife/Documents/nextjs/blog/pages/stories/[slug].jsx"],"names":["React","useEffect","useState","BlogLayout","Container","View","Text","Image","Badge","Link","useRouter","useSelector","Markdown","documentToHtmlString","documentToReactComponents","BLOCKS","MARKS","Bold","children","client","require","createClient","space","process","env","SPACE_ID","accessToken","ACCESS_TOKEN","Story","props","router","slug","setSlug","story","state","stories","fields","getSingle","data","getEntries","content_type","items","forEach","entry","setStory","options","renderMark","BOLD","text","renderNode","PARAGRAPH","node","EMBEDDED_ASSET","description","title","file","target","console","log","url","renderText","split","reduce","textSegment","index","content","body","param","query","subtitle","heroImage"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,oCAA3B;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,IAA1B,EAAgCC,KAAhC,EAAuCC,KAAvC,QAAmD,wBAAnD;AAEA,OAAO,gBAAP;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,yBAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAO,KAAKC,QAAZ,MAA0B,gBAA1B;AACA,SAASC,oBAAT,QAAqC,qCAArC;AACA,SAASC,yBAAT,QAA0C,sCAA1C;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,6BAA9B;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAG,EAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAqBA,QAArB,CAA/B;;AAEA,MAAMC,MAAM,GAAGC,OAAO,CAAC,YAAD,CAAP,CAAsBC,YAAtB,CAAmC;AAC9CC,EAAAA,KAAK,EAAEC,OAAO,CAACC,GAAR,CAAYC,QAD2B;AAE9CC,EAAAA,WAAW,EAAEH,OAAO,CAACC,GAAR,CAAYG;AAFqB,CAAnC,CAAf;;AAKA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACrB,QAAMC,MAAM,GAAGpB,SAAS,EAAxB;AACA,QAAM;AAAA,OAACqB,IAAD;AAAA,OAAOC;AAAP,MAAkB9B,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM+B,KAAK,GAAGtB,WAAW,CAACuB,KAAK,IAAIA,KAAK,CAACC,OAAN,CAAcF,KAAd,CAAoBG,MAA9B,CAAzB;;AAEA,iBAAeC,SAAf,GAA0B;AACtB,UAAMC,IAAI,GAAG,MAAMnB,MAAM,CAACoB,UAAP,CAAkB;AACjCC,MAAAA,YAAY,EAAE,OADmB;AAEjC,4BAAsBT;AAFW,KAAlB,CAAnB;AAKEO,IAAAA,IAAI,CAACG,KAAL,CAAWC,OAAX,CAAmB,UAAUC,KAAV,EAAiB;AAClCC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,KAFD;AAGL;;AAED,QAAME,OAAO,GAAG;AACZC,IAAAA,UAAU,EAAE;AACV,OAAC9B,KAAK,CAAC+B,IAAP,GAAcC,IAAI,IAAI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOA,IAAP;AADZ,KADA;AAIZC,IAAAA,UAAU,EAAE;AACV,OAAClC,MAAM,CAACmC,SAAR,GAAoB,CAACC,IAAD,EAAOjC,QAAP,KAAoB,MAAC,IAAD;AAAM,QAAA,OAAO,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsBA,QAAtB,CAD9B;AAEV,OAACH,MAAM,CAACqC,cAAR,GAAyBD,IAAI,IAAI;AAC/B;AACA,YAAI;AAAEE,UAAAA,WAAF;AAAeC,UAAAA,KAAf;AAAsBC,UAAAA;AAAtB,YAA+BJ,IAAI,CAACb,IAAL,CAAUkB,MAAV,CAAiBpB,MAApD;AACAqB,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,eAAO;AAAK,UAAA,GAAG,EAAEA,IAAI,CAACI,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;AAPS,KAJA;AAaZC,IAAAA,UAAU,EAAEZ,IAAI,IAAI;AAChB,aAAOA,IAAI,CAACa,KAAL,CAAW,IAAX,EAAiBC,MAAjB,CAAwB,CAAC5C,QAAD,EAAW6C,WAAX,EAAwBC,KAAxB,KAAkC;AAC/D,eAAO,CAAC,GAAG9C,QAAJ,EAAc8C,KAAK,GAAG,CAAR,IAAa;AAAI,UAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA3B,EAA+CD,WAA/C,CAAP;AACD,OAFM,EAEJ,EAFI,CAAP;AAGD;AAjBS,GAAhB;AAmBA,QAAME,OAAO,GAAGnD,yBAAyB,CAACmB,KAAK,CAACiC,IAAP,EAAarB,OAAb,CAAzC;AAEA5C,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIkE,KAAK,GAAGrC,MAAM,CAACsC,KAAP,CAAarC,IAAzB;AACAC,IAAAA,OAAO,CAACmC,KAAD,CAAP;;AAEA,QAAGlC,KAAK,KAAK,IAAb,EAAkB;AACdI,MAAAA,SAAS;AACToB,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACH;;AAGDD,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwBzB,KAAxB;AACH,GAXQ,CAAT;AAYA,SACI,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,SAAD;AAAW,IAAA,SAAS,EAAC,iBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAgC,IAAA,SAAS,EAAC,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,KAAD;AAAO,IAAA,GAAG,EAAC,sCAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ,CADJ,EAQI,MAAC,IAAD;AAAM,IAAA,SAAS,EAAC,sBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBA,KAAK,CAACqB,KAA7B,CADJ,EAEI,MAAC,IAAD;AAAM,IAAA,SAAS,EAAC,UAAhB;AAA2B,IAAA,MAAM,EAAC,WAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+CrB,KAAK,CAACoC,QAArD,CAFJ,EAGI,MAAC,KAAD;AAAO,IAAA,GAAG,EAAG,SAAQpC,KAAK,CAACqC,SAAN,CAAgBlC,MAAhB,CAAuBmB,IAAvB,CAA4BI,GAAI,EAArD;AAAwD,IAAA,SAAS,EAAC,YAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CARJ,EAaI,MAAC,IAAD;AAAM,IAAA,SAAS,EAAC,oBAAhB;AAAqC,IAAA,SAAS,EAAC,QAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEKM,OAFL,CAbJ,EAiBI,MAAC,IAAD;AAAM,IAAA,SAAS,EAAC,sBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEI,MAAC,IAAD;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,KAAD;AACA,IAAA,KAAK,EAAC,WADN;AAEA,IAAA,eAAe,EAAC,SAFhB;AAGA,IAAA,KAAK,EAAC,SAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAKK,MAAC,KAAD;AACD,IAAA,KAAK,EAAC,OADL;AAED,IAAA,eAAe,EAAC,SAFf;AAGD,IAAA,KAAK,EAAC,SAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALL,CAFJ,CADJ,EAcI,MAAC,IAAD;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEI,MAAC,IAAD;AAAM,IAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFJ,CAdJ,CAjBJ,CADJ,CADJ,CADJ;AA2CH,CA5FD;;AA8FA,eAAerC,KAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { BlogLayout } from \"../../components/templates/layouts\";\nimport { Container, View, Text, Image, Badge} from '../../components/atoms'\n\nimport './stories.scss'\nimport Link from 'next/link';\nimport { useRouter } from 'next/dist/client/router';\nimport { useSelector } from 'react-redux';\nimport * as Markdown from 'react-markdown'\nimport { documentToHtmlString } from '@contentful/rich-text-html-renderer';\nimport { documentToReactComponents } from '@contentful/rich-text-react-renderer';\nimport { BLOCKS, MARKS } from '@contentful/rich-text-types';\n\nconst Bold = ({ children }) => <p className=\"bold\">{children}</p>;\n\nconst client = require('contentful').createClient({\n    space: process.env.SPACE_ID,\n    accessToken: process.env.ACCESS_TOKEN\n})\n\nconst Story = (props) => {\n    const router = useRouter()\n    const [slug, setSlug] = useState('')\n    const story = useSelector(state => state.stories.story.fields)\n\n    async function getSingle(){\n        const data = await client.getEntries({\n            content_type: 'story',\n            'fields.slug[match]': slug\n          })\n          \n          data.items.forEach(function (entry) {\n            setStory(entry)\n          })\n    }\n\n    const options = {\n        renderMark: {\n          [MARKS.BOLD]: text => <Text>{text}</Text>,\n        },\n        renderNode: {\n          [BLOCKS.PARAGRAPH]: (node, children) => <Text variant=\"grey\">{children}</Text>,\n          [BLOCKS.EMBEDDED_ASSET]: node => {\n            // console.log(node)\n            let { description, title, file } = node.data.target.fields\n            console.log(file)\n            return <img src={file.url} />\n          },\n        },\n        renderText: text => {\n            return text.split('\\n').reduce((children, textSegment, index) => {\n              return [...children, index > 0 && <br key={index} />, textSegment];\n            }, []);\n          },\n      };\n    const content = documentToReactComponents(story.body, options)\n\n    useEffect(() => {\n        let param = router.query.slug\n        setSlug(param)\n\n        if(story === null){\n            getSingle()\n            console.log(\"STATE IS NULL !!\")\n        }\n\n\n        console.log(\"STATE :: \",story)\n    })\n    return (\n        <BlogLayout>\n            <Container className=\"story-container\">\n                <View className=\"story-content\" direction=\"column\">\n                    <Link href=\"/stories\">\n                        <a>\n                            <View className=\"story-close-btn\">\n                                <Image src=\"/static/illustrations/close-dark.svg\"/>\n                            </View>\n                        </a>\n                    </Link>\n                    <View className=\"story-content-header\">\n                        <h1 className=\"title\">{story.title}</h1>\n                        <Text className=\"subtitle\" family=\"quicksand\">{story.subtitle}</Text>\n                        <Image src={`https:${story.heroImage.fields.file.url}`} className=\"hero-image\"/>\n                    </View>\n                    <View className=\"story-content-body\" direction=\"column\">\n                        {/* <Markdown source={content} /> */}\n                        {content}\n                    </View>\n                    <View className=\"story-content-footer\">\n                        <View className=\"tags-wrapper\">\n                            <Text className=\"title\">Tags</Text>\n                            <View className=\"tags\">\n                                <Badge \n                                title=\"Storybook\"\n                                backgroundColor=\"#FFEDED\"\n                                color=\"#FF5252\"/>\n                                 <Badge \n                                title=\"React\"\n                                backgroundColor=\"#FFEDED\"\n                                color=\"#FF5252\"/>\n                            </View>\n                        </View>\n                        <View className=\"publish-date\">\n                            <Text className=\"title\">Publish date</Text>\n                            <Text className=\"subtitle\">2020-04-28 14:50:00</Text>\n                        </View>\n                    </View>\n                </View>\n            </Container>\n        </BlogLayout>\n    )\n}\n\nexport default Story"]},"metadata":{},"sourceType":"module"}