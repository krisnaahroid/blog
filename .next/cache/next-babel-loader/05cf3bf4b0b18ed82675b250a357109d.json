{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport StyledImage from './image.styles.jsx';\n\nconst Image = (_ref) => {\n  let {\n    src,\n    position,\n    top,\n    left,\n    right,\n    bottom,\n    margin,\n    isEqualposition,\n    isEqualtop,\n    isEqualleft,\n    isEqualright,\n    isEqualbottom,\n    width,\n    height,\n    radius\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"src\", \"position\", \"top\", \"left\", \"right\", \"bottom\", \"margin\", \"isEqualposition\", \"isEqualtop\", \"isEqualleft\", \"isEqualright\", \"isEqualbottom\", \"width\", \"height\", \"radius\"]);\n\n  return __jsx(StyledImage, _extends({\n    src: src,\n    position: position,\n    top: top,\n    left: left,\n    right: right,\n    bottom: bottom,\n    margin: margin,\n    isEqualposition: isEqualposition,\n    isEqualtop: isEqualtop,\n    isEqualleft: isEqualleft,\n    isEqualright: isEqualright,\n    isEqualbottom: isEqualbottom,\n    width: width,\n    height: height,\n    radius: radius\n  }, props));\n};\n\nexport default Image;","map":null,"metadata":{},"sourceType":"module"}