{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/ahroidlife/Documents/nextjs/blog/pages/stories/stories.jsx\";\n\nvar __jsx = React.createElement;\nimport React, { Component, useEffect, useState } from 'react';\nimport { BlogLayout } from \"../../components/templates/layouts\";\nimport { Hero } from '../../components/organisms';\nimport ImageHero from '../../assets/illustrations/daily-stories.svg';\nimport { SliderHero, SliderCategories } from '../../components/organisms';\nimport Router from 'next/router';\nimport { Container, View, Text, Rows } from '../../components/atoms';\nimport { CardStories } from '../../components/molecules';\nimport './stories.scss';\nimport Head from 'next/head';\nimport Knobs from './stories.knobs.json';\nimport { useDispatch } from 'react-redux';\nvar item = Knobs.item,\n    populars = Knobs.populars;\nimport actions from '../../store/modules/stories/actions';\nimport Link from 'next/link';\nimport { SitemapStream, streamToPromise } from 'sitemap';\n\nvar client = require('contentful').createClient({\n  space: process.env.SPACE_ID,\n  accessToken: process.env.ACCESS_TOKEN\n});\n\nvar Stories = function Stories(req, res) {\n  var _useState, popular, setPopular, _useState2, stories, setStories, _useState3, story, setStory, dispatch, smStream, posts, sitemapOutput, fetchPopulars, fetchStoryCategories, fetchStories, handleToStory;\n\n  return _regeneratorRuntime.async(function Stories$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          fetchStories = function _fetchStories() {\n            var entries;\n            return _regeneratorRuntime.async(function fetchStories$(_context3) {\n              while (1) {\n                switch (_context3.prev = _context3.next) {\n                  case 0:\n                    _context3.next = 2;\n                    return _regeneratorRuntime.awrap(client.getEntries({\n                      content_type: 'story'\n                    }));\n\n                  case 2:\n                    entries = _context3.sent;\n\n                    if (!entries.items) {\n                      _context3.next = 5;\n                      break;\n                    }\n\n                    return _context3.abrupt(\"return\", entries.items);\n\n                  case 5:\n                    console.log(\"Error getting Entries for \".concat(contentType.name, \".\"));\n\n                  case 6:\n                  case \"end\":\n                    return _context3.stop();\n                }\n              }\n            }, null, null, null, Promise);\n          };\n\n          fetchStoryCategories = function _fetchStoryCategories() {\n            var entries;\n            return _regeneratorRuntime.async(function fetchStoryCategories$(_context2) {\n              while (1) {\n                switch (_context2.prev = _context2.next) {\n                  case 0:\n                    _context2.next = 2;\n                    return _regeneratorRuntime.awrap(client.getEntries({\n                      content_type: 'stories'\n                    }));\n\n                  case 2:\n                    entries = _context2.sent;\n\n                    if (!entries.items) {\n                      _context2.next = 5;\n                      break;\n                    }\n\n                    return _context2.abrupt(\"return\", entries.items);\n\n                  case 5:\n                    console.log(\"Error getting Entries for \".concat(contentType.name, \".\"));\n\n                  case 6:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }\n            }, null, null, null, Promise);\n          };\n\n          fetchPopulars = function _fetchPopulars() {\n            var entries;\n            return _regeneratorRuntime.async(function fetchPopulars$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.next = 2;\n                    return _regeneratorRuntime.awrap(client.getEntries({\n                      content_type: 'popularStories'\n                    }));\n\n                  case 2:\n                    entries = _context.sent;\n\n                    if (!entries.items) {\n                      _context.next = 5;\n                      break;\n                    }\n\n                    return _context.abrupt(\"return\", entries.items);\n\n                  case 5:\n                    console.log(\"Error getting Entries for \".concat(contentType.name, \".\"));\n\n                  case 6:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, null, null, null, Promise);\n          };\n\n          _useState = useState([]), popular = _useState[0], setPopular = _useState[1];\n          _useState2 = useState([]), stories = _useState2[0], setStories = _useState2[1];\n          _useState3 = useState([]), story = _useState3[0], setStory = _useState3[1];\n          dispatch = useDispatch();\n          _context7.prev = 7;\n          smStream = new SitemapStream({\n            hostname: \"https://\".concat(req.headers.host),\n            cacheTime: 600000\n          }); // List of posts\n\n          posts = []; // Create each URL row\n\n          posts.forEach(function (post) {\n            smStream.write({\n              url: \"/stories/\".concat(post.slug),\n              changefreq: 'daily',\n              priority: 0.9\n            });\n          }); // End sitemap stream\n\n          smStream.end(); // XML sitemap string\n\n          _context7.next = 14;\n          return _regeneratorRuntime.awrap(streamToPromise(smStream));\n\n        case 14:\n          sitemapOutput = _context7.sent.toString();\n          // Change headers\n          res.writeHead(200, {\n            'Content-Type': 'application/xml'\n          }); // Display output to user\n\n          res.end(sitemapOutput);\n          _context7.next = 23;\n          break;\n\n        case 19:\n          _context7.prev = 19;\n          _context7.t0 = _context7[\"catch\"](7);\n          console.log(_context7.t0);\n          res.send(JSON.stringify(_context7.t0));\n\n        case 23:\n          useEffect(function () {\n            document.body.style.overflow = 'unset';\n            console.log(\"REQUEST :: \", req);\n\n            function getPopulars() {\n              var allPosts;\n              return _regeneratorRuntime.async(function getPopulars$(_context4) {\n                while (1) {\n                  switch (_context4.prev = _context4.next) {\n                    case 0:\n                      _context4.next = 2;\n                      return _regeneratorRuntime.awrap(fetchPopulars());\n\n                    case 2:\n                      allPosts = _context4.sent;\n                      setPopular(_toConsumableArray(allPosts));\n\n                    case 4:\n                    case \"end\":\n                      return _context4.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            }\n\n            function getStoriesCategories() {\n              var allCategories;\n              return _regeneratorRuntime.async(function getStoriesCategories$(_context5) {\n                while (1) {\n                  switch (_context5.prev = _context5.next) {\n                    case 0:\n                      _context5.next = 2;\n                      return _regeneratorRuntime.awrap(fetchStoryCategories());\n\n                    case 2:\n                      allCategories = _context5.sent;\n                      setStories(_toConsumableArray(allCategories));\n\n                    case 4:\n                    case \"end\":\n                      return _context5.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            }\n\n            function getStories() {\n              var allStories;\n              return _regeneratorRuntime.async(function getStories$(_context6) {\n                while (1) {\n                  switch (_context6.prev = _context6.next) {\n                    case 0:\n                      _context6.next = 2;\n                      return _regeneratorRuntime.awrap(fetchStories());\n\n                    case 2:\n                      allStories = _context6.sent;\n                      setStory(_toConsumableArray(allStories));\n\n                    case 4:\n                    case \"end\":\n                      return _context6.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            }\n\n            getStories();\n            getStoriesCategories();\n            getPopulars();\n          }, []);\n\n          handleToStory = function handleToStory(story) {\n            dispatch(actions.setStory(story)); //  await Router.push(`/stories/${story.fields.slug}`)\n          };\n\n          return _context7.abrupt(\"return\", __jsx(React.Fragment, null, __jsx(Head, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 9\n            }\n          }, __jsx(\"title\", {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 13\n            }\n          }, \"Krisna Ahroid | Stories\")), __jsx(BlogLayout, {\n            title: \"Stories\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 9\n            }\n          }, __jsx(Hero, {\n            title: \"Stories Resources\",\n            subtitle: \"The more that you read the more things you will know. \",\n            img: ImageHero,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 13\n            }\n          }), __jsx(SliderHero, {\n            items: popular,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 13\n            }\n          }), __jsx(SliderCategories, {\n            items: stories,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 13\n            }\n          }), __jsx(View, {\n            padding: \"100px\",\n            direction: \"column\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 13\n            }\n          }, __jsx(View, {\n            margin: \"0 0 50px 0\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }\n          }, __jsx(Text, {\n            family: \"daily\",\n            size: \"32\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 21\n            }\n          }, \"Our Stories\")), __jsx(Rows, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 17\n            }\n          }, story.map(function (item, index) {\n            return __jsx(View, {\n              key: index,\n              className: \"grid-item-3\",\n              onClick: function onClick() {\n                return handleToStory(item);\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 37\n              }\n            }, __jsx(Link, {\n              href: \"/stories/[slug]\",\n              as: \"/stories/\".concat(item.fields.slug),\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 41\n              }\n            }, __jsx(\"a\", {\n              style: {\n                textDecoration: 'none'\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 45\n              }\n            }, __jsx(CardStories, {\n              title: item.fields.title,\n              label: item.fields.label,\n              image: item.fields.image.fields.file.url,\n              className: \"card-our-stories\",\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 49\n              }\n            }))));\n          }))))));\n\n        case 26:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, null, null, [[7, 19]], Promise);\n};\n\nexport default Stories;","map":{"version":3,"sources":["/Users/ahroidlife/Documents/nextjs/blog/pages/stories/stories.jsx"],"names":["React","Component","useEffect","useState","BlogLayout","Hero","ImageHero","SliderHero","SliderCategories","Router","Container","View","Text","Rows","CardStories","Head","Knobs","useDispatch","item","populars","actions","Link","SitemapStream","streamToPromise","client","require","createClient","space","process","env","SPACE_ID","accessToken","ACCESS_TOKEN","Stories","req","res","fetchPopulars","fetchStoryCategories","fetchStories","getEntries","content_type","entries","items","console","log","contentType","name","popular","setPopular","stories","setStories","story","setStory","dispatch","smStream","hostname","headers","host","cacheTime","posts","forEach","post","write","url","slug","changefreq","priority","end","sitemapOutput","toString","writeHead","send","JSON","stringify","document","body","style","overflow","getPopulars","allPosts","getStoriesCategories","allCategories","getStories","allStories","handleToStory","map","index","fields","textDecoration","title","label","image","file"],"mappings":"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","sourcesContent":["import React, {Component, useEffect, useState} from 'react'\nimport { BlogLayout } from \"../../components/templates/layouts\";\nimport {Hero} from '../../components/organisms'\nimport ImageHero from '../../assets/illustrations/daily-stories.svg'\nimport {SliderHero, SliderCategories} from '../../components/organisms'\nimport Router from 'next/router'\nimport { Container, View, Text, Rows} from '../../components/atoms'\nimport { CardStories } from '../../components/molecules'\nimport './stories.scss'\nimport Head from 'next/head'\nimport Knobs from './stories.knobs.json'\nimport { useDispatch } from 'react-redux';\nconst {item, populars} = Knobs\n\nimport actions from '../../store/modules/stories/actions'\nimport Link from 'next/link';\nimport { SitemapStream, streamToPromise } from 'sitemap';\n\nconst client = require('contentful').createClient({\n    space: process.env.SPACE_ID,\n    accessToken: process.env.ACCESS_TOKEN\n})\n\nconst Stories = async (req, res) => {\n    const [popular, setPopular] = useState([])\n    const [stories, setStories] = useState([])\n    const [story, setStory] = useState([])\n\n    const dispatch = useDispatch()\n\n    try {\n        const smStream = new SitemapStream({\n          hostname: `https://${req.headers.host}`,\n          cacheTime: 600000,\n        });\n    \n        // List of posts\n        const posts = [];\n    \n        // Create each URL row\n        posts.forEach(post => {\n          smStream.write({\n            url: `/stories/${post.slug}`,\n            changefreq: 'daily',\n            priority: 0.9\n          });\n        });\n    \n        // End sitemap stream\n        smStream.end();\n    \n        // XML sitemap string\n        const sitemapOutput = (await streamToPromise(smStream)).toString();\n    \n        // Change headers\n        res.writeHead(200, {\n          'Content-Type': 'application/xml'\n        });\n    \n        // Display output to user\n        res.end(sitemapOutput);\n      } catch(e) {\n        console.log(e)\n        res.send(JSON.stringify(e))\n      }\n\n    async function fetchPopulars(){\n        const entries = await client.getEntries({\n            content_type: 'popularStories'\n        })\n        if (entries.items) return entries.items\n        console.log(`Error getting Entries for ${contentType.name}.`)\n    }\n\n    async function fetchStoryCategories(){\n        const entries = await client.getEntries({\n            content_type: 'stories'\n        })\n        if (entries.items) return entries.items\n        console.log(`Error getting Entries for ${contentType.name}.`)\n    }\n    \n    async function fetchStories(){\n        const entries = await client.getEntries({\n            content_type: 'story'\n        })\n        if (entries.items) return entries.items\n        console.log(`Error getting Entries for ${contentType.name}.`)\n    }\n    \n    useEffect(() => {\n        document.body.style.overflow = 'unset';\n        console.log(\"REQUEST :: \",req)\n\n        async function getPopulars() {\n            const allPosts = await fetchPopulars()\n            setPopular([...allPosts])\n          }\n\n        async function getStoriesCategories(){\n            const allCategories = await fetchStoryCategories()\n            setStories([...allCategories])\n        }\n\n        async function getStories(){\n            const allStories = await fetchStories()\n            setStory([...allStories])\n        }\n\n        getStories()\n        getStoriesCategories()\n        getPopulars()\n    },[])\n\n    const handleToStory = (story) => {\n         dispatch(actions.setStory(story))\n        //  await Router.push(`/stories/${story.fields.slug}`)\n    }\n\n    return (\n        <>\n        <Head>\n            <title>Krisna Ahroid | Stories</title>\n        </Head>\n        <BlogLayout title=\"Stories\">\n            <Hero\n                title=\"Stories Resources\"\n                subtitle=\"The more that you read the more things you will know. \"\n                img={ImageHero}/>\n\n            <SliderHero items={popular}/>\n\n            <SliderCategories items={stories}/>\n\n            <View padding=\"100px\" direction=\"column\">\n                <View margin=\"0 0 50px 0\">\n                    <Text family=\"daily\" size=\"32\" >Our Stories</Text>\n                </View>\n                <Rows>\n                    {\n                        story.map((item, index) => (\n                                    <View key={index} className=\"grid-item-3\" onClick={() => handleToStory(item)}>\n                                        <Link href=\"/stories/[slug]\" as={`/stories/${item.fields.slug}`}>\n                                            <a  style={{textDecoration: 'none'}}>\n                                                <CardStories title={item.fields.title} label={item.fields.label}  image={item.fields.image.fields.file.url} className=\"card-our-stories\"/>\n                                            </a>\n                                        </Link>\n                                    </View>\n                        ))\n                    }\n                </Rows>\n            </View>\n        </BlogLayout> \n        </>\n        )\n        \n}\n\nexport default Stories;"]},"metadata":{},"sourceType":"module"}