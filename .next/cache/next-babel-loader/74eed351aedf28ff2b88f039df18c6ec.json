{"ast":null,"code":"var _jsxFileName = \"/Users/ahroidlife/Documents/nextjs/blog/components/organisms/articles/articleText/articleText.jsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { Rows, Image, View } from '../../../atoms';\nimport { CardText } from '../../../molecules';\n\nconst ArticleText = ({\n  items,\n  image,\n  outline,\n  props\n}) => {\n  if (image) {\n    return __jsx(Rows, _extends({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 13\n      }\n    }), __jsx(View, {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }\n    }, __jsx(Image, {\n      src: image,\n      width: \"90%\",\n      position: \"relative\",\n      top: \"-20px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 21\n      }\n    })), items.map(item => __jsx(CardText, {\n      key: item.id,\n      title: item.title,\n      subtitle: item.subtitle,\n      variant: item.badge.background,\n      color: item.badge.color,\n      badgeTitle: item.badge.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 25\n      }\n    })));\n  }\n\n  if (outline) {\n    return __jsx(Rows, _extends({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }), items.map(item => __jsx(CardText, {\n      key: item.id,\n      title: item.title,\n      icon: item.badge.icon,\n      tagname: item.badge.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 25\n      }\n    })));\n  }\n\n  return __jsx(Rows, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }), items.map(item => __jsx(CardText, {\n    key: item.id,\n    title: item.title,\n    subtitle: item.subtitle,\n    variant: item.badge.background,\n    color: item.badge.color,\n    badgeTitle: item.badge.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  })));\n};\n\nexport default ArticleText;","map":{"version":3,"sources":["/Users/ahroidlife/Documents/nextjs/blog/components/organisms/articles/articleText/articleText.jsx"],"names":["React","Rows","Image","View","CardText","ArticleText","items","image","outline","props","map","item","id","title","subtitle","badge","background","color","icon"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,EAAcC,KAAd,EAAqBC,IAArB,QAAgC,gBAAhC;AACA,SAAQC,QAAR,QAAuB,oBAAvB;;AAGA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA,KAAR;AAAeC,EAAAA,OAAf;AAAyBC,EAAAA;AAAzB,CAAD,KAAqC;AAErD,MAAGF,KAAH,EAAS;AACL,WACI,MAAC,IAAD,eAAUE,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACI,MAAC,IAAD;AAAM,MAAA,KAAK,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,KAAD;AAAO,MAAA,GAAG,EAAEF,KAAZ;AAAmB,MAAA,KAAK,EAAC,KAAzB;AAA+B,MAAA,QAAQ,EAAC,UAAxC;AAAmD,MAAA,GAAG,EAAC,OAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,EAKQD,KAAK,CAACI,GAAN,CAAUC,IAAI,IACV,MAAC,QAAD;AACI,MAAA,GAAG,EAAEA,IAAI,CAACC,EADd;AAEI,MAAA,KAAK,EAAED,IAAI,CAACE,KAFhB;AAGI,MAAA,QAAQ,EAAEF,IAAI,CAACG,QAHnB;AAII,MAAA,OAAO,EAAEH,IAAI,CAACI,KAAL,CAAWC,UAJxB;AAKI,MAAA,KAAK,EAAEL,IAAI,CAACI,KAAL,CAAWE,KALtB;AAMI,MAAA,UAAU,EAAEN,IAAI,CAACI,KAAL,CAAWF,KAN3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CALR,CADJ;AAmBH;;AAED,MAAIL,OAAJ,EAAa;AACT,WACI,MAAC,IAAD,eAAUC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAEQH,KAAK,CAACI,GAAN,CAAUC,IAAI,IACV,MAAC,QAAD;AACI,MAAA,GAAG,EAAEA,IAAI,CAACC,EADd;AAEI,MAAA,KAAK,EAAED,IAAI,CAACE,KAFhB;AAGI,MAAA,IAAI,EAAEF,IAAI,CAACI,KAAL,CAAWG,IAHrB;AAII,MAAA,OAAO,EAAEP,IAAI,CAACI,KAAL,CAAWF,KAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAFR,CADJ;AAcH;;AAED,SACI,MAAC,IAAD,eAAUJ,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAEQH,KAAK,CAACI,GAAN,CAAUC,IAAI,IACV,MAAC,QAAD;AACI,IAAA,GAAG,EAAEA,IAAI,CAACC,EADd;AAEI,IAAA,KAAK,EAAED,IAAI,CAACE,KAFhB;AAGI,IAAA,QAAQ,EAAEF,IAAI,CAACG,QAHnB;AAII,IAAA,OAAO,EAAEH,IAAI,CAACI,KAAL,CAAWC,UAJxB;AAKI,IAAA,KAAK,EAAEL,IAAI,CAACI,KAAL,CAAWE,KALtB;AAMI,IAAA,UAAU,EAAEN,IAAI,CAACI,KAAL,CAAWF,KAN3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFR,CADJ;AAgBH,CAzDD;;AA2DA,eAAeR,WAAf","sourcesContent":["import React from 'react'\nimport {Rows, Image, View} from '../../../atoms'\nimport {CardText} from '../../../molecules'\n\n\nconst ArticleText = ({items, image, outline,  props}) => {\n\n    if(image){\n        return (\n            <Rows {...props}>\n                <View align=\"center\">\n                    <Image src={image} width=\"90%\" position=\"relative\" top=\"-20px\"/>\n                </View>\n                {\n                    items.map(item => (\n                        <CardText\n                            key={item.id}\n                            title={item.title}\n                            subtitle={item.subtitle}\n                            variant={item.badge.background}\n                            color={item.badge.color}\n                            badgeTitle={item.badge.title}\n                        />\n                    ))\n                }\n            </Rows>\n        )\n    }\n\n    if (outline) {\n        return (\n            <Rows {...props}>\n                {\n                    items.map(item => (\n                        <CardText\n                            key={item.id}\n                            title={item.title}\n                            icon={item.badge.icon}\n                            tagname={item.badge.title}\n                        />\n                    ))\n                }\n            </Rows>\n        )\n    }\n\n    return (\n        <Rows {...props}>\n            {\n                items.map(item => (\n                    <CardText\n                        key={item.id}\n                        title={item.title}\n                        subtitle={item.subtitle}\n                        variant={item.badge.background}\n                        color={item.badge.color}\n                        badgeTitle={item.badge.title}\n                    />\n                ))\n            }\n        </Rows>\n    )\n}\n\nexport default ArticleText"]},"metadata":{},"sourceType":"module"}