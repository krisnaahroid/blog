{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/ahroidlife/Documents/nextjs/blog/components/atoms/texts/text.jsx\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport StyledText, { StyledLink } from './text.styles.jsx';\nimport { string } from 'prop-types';\n\nvar Text = function Text(_ref) {\n  var children = _ref.children,\n      href = _ref.href,\n      target = _ref.target,\n      variant = _ref.variant,\n      size = _ref.size,\n      weight = _ref.weight,\n      align = _ref.align,\n      isEqualSize = _ref.isEqualSize,\n      isEqualAlign = _ref.isEqualAlign,\n      props = _objectWithoutProperties(_ref, [\"children\", \"href\", \"target\", \"variant\", \"size\", \"weight\", \"align\", \"isEqualSize\", \"isEqualAlign\"]);\n\n  if (!href) return __jsx(StyledText, _extends({\n    variant: variant,\n    size: size,\n    weight: weight,\n    align: align,\n    isEqualSize: isEqualSize,\n    isEqualAlign: isEqualAlign\n  }, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  }), children);\n  return __jsx(StyledLink, {\n    href: href,\n    variant: variant,\n    target: target,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, children);\n};\n\nText.propTypes = {\n  variant: string,\n  size: string,\n  weight: string,\n  align: string,\n  isEqualSize: string,\n  isEqualAlign: string\n};\nexport default Text;","map":{"version":3,"sources":["/Users/ahroidlife/Documents/nextjs/blog/components/atoms/texts/text.jsx"],"names":["React","StyledText","StyledLink","string","Text","children","href","target","variant","size","weight","align","isEqualSize","isEqualAlign","props","propTypes"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,UAAP,IAAoBC,UAApB,QAAqC,mBAArC;AACA,SAASC,MAAT,QAAuB,YAAvB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAAiG;AAAA,MAA/FC,QAA+F,QAA/FA,QAA+F;AAAA,MAArFC,IAAqF,QAArFA,IAAqF;AAAA,MAA/EC,MAA+E,QAA/EA,MAA+E;AAAA,MAAvEC,OAAuE,QAAvEA,OAAuE;AAAA,MAA9DC,IAA8D,QAA9DA,IAA8D;AAAA,MAAxDC,MAAwD,QAAxDA,MAAwD;AAAA,MAAhDC,KAAgD,QAAhDA,KAAgD;AAAA,MAAzCC,WAAyC,QAAzCA,WAAyC;AAAA,MAA5BC,YAA4B,QAA5BA,YAA4B;AAAA,MAAXC,KAAW;;AAE1G,MAAG,CAACR,IAAJ,EACI,OACI,MAAC,UAAD;AACA,IAAA,OAAO,EAAEE,OADT;AAEA,IAAA,IAAI,EAAEC,IAFN;AAGA,IAAA,MAAM,EAAEC,MAHR;AAIA,IAAA,KAAK,EAAEC,KAJP;AAKA,IAAA,WAAW,EAAEC,WALb;AAMA,IAAA,YAAY,EAAEC;AANd,KAOIC,KAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MASKT,QATL,CADJ;AAcJ,SACI,MAAC,UAAD;AAAY,IAAA,IAAI,EAAEC,IAAlB;AAAwB,IAAA,OAAO,EAAEE,OAAjC;AAA0C,IAAA,MAAM,EAAED,MAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,QADL,CADJ;AAKH,CAtBD;;AAwBAD,IAAI,CAACW,SAAL,GAAiB;AACbP,EAAAA,OAAO,EAAEL,MADI;AAEbM,EAAAA,IAAI,EAAEN,MAFO;AAGbO,EAAAA,MAAM,EAAEP,MAHK;AAIbQ,EAAAA,KAAK,EAAER,MAJM;AAKbS,EAAAA,WAAW,EAAET,MALA;AAMbU,EAAAA,YAAY,EAAEV;AAND,CAAjB;AASA,eAAeC,IAAf","sourcesContent":["import React from 'react'\n\nimport StyledText, {StyledLink} from './text.styles.jsx'\nimport { string } from 'prop-types'\n\nconst Text = ({children, href, target, variant, size, weight, align, isEqualSize, isEqualAlign, ...props}) => {\n\n    if(!href)\n        return(\n            <StyledText \n            variant={variant} \n            size={size} \n            weight={weight} \n            align={align}\n            isEqualSize={isEqualSize}\n            isEqualAlign={isEqualAlign}\n            {...props}\n            >\n                {children}\n            </StyledText>\n        )\n\n    return (\n        <StyledLink href={href} variant={variant} target={target}>\n            {children}\n        </StyledLink>\n    )\n}\n\nText.propTypes = {\n    variant: string,\n    size: string,\n    weight: string,\n    align: string,\n    isEqualSize: string,\n    isEqualAlign: string\n}\n\nexport default Text"]},"metadata":{},"sourceType":"module"}