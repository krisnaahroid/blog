{"ast":null,"code":"var _jsxFileName = \"/Users/ahroidlife/Documents/nextjs/blog/pages/stories/stories.jsx\";\nvar __jsx = React.createElement;\nimport React, { Component, useEffect, useState } from 'react';\nimport { BlogLayout } from \"../../components/templates/layouts\";\nimport { Hero } from '../../components/organisms';\nimport ImageHero from '../../assets/illustrations/daily-stories.svg';\nimport { SliderHero, SliderCategories } from '../../components/organisms';\nimport Router from 'next/router';\nimport { Container, View, Text, Rows } from '../../components/atoms';\nimport { CardStories } from '../../components/molecules';\nimport './stories.scss';\nimport Head from 'next/head';\nimport Knobs from './stories.knobs.json';\nimport { useDispatch } from 'react-redux';\nconst {\n  item,\n  populars\n} = Knobs;\nimport actions from '../../store/modules/stories/actions';\nimport Link from 'next/link';\nimport { SitemapStream, streamToPromise } from 'sitemap';\n\nconst client = require('contentful').createClient({\n  space: process.env.SPACE_ID,\n  accessToken: process.env.ACCESS_TOKEN\n});\n\nconst Stories = async (req, res) => {\n  const {\n    0: popular,\n    1: setPopular\n  } = useState([]);\n  const {\n    0: stories,\n    1: setStories\n  } = useState([]);\n  const {\n    0: story,\n    1: setStory\n  } = useState([]);\n  const dispatch = useDispatch();\n\n  try {\n    const smStream = new SitemapStream({\n      hostname: `https://${req.headers.host}`,\n      cacheTime: 600000\n    }); // List of posts\n\n    const posts = []; // Create each URL row\n\n    posts.forEach(post => {\n      smStream.write({\n        url: `/stories/${post.slug}`,\n        changefreq: 'daily',\n        priority: 0.9\n      });\n    }); // End sitemap stream\n\n    smStream.end(); // XML sitemap string\n\n    const sitemapOutput = (await streamToPromise(smStream)).toString(); // Change headers\n\n    res.writeHead(200, {\n      'Content-Type': 'application/xml'\n    }); // Display output to user\n\n    res.end(sitemapOutput);\n  } catch (e) {\n    console.log(e);\n    res.send(JSON.stringify(e));\n  }\n\n  async function fetchPopulars() {\n    const entries = await client.getEntries({\n      content_type: 'popularStories'\n    });\n    if (entries.items) return entries.items;\n    console.log(`Error getting Entries for ${contentType.name}.`);\n  }\n\n  async function fetchStoryCategories() {\n    const entries = await client.getEntries({\n      content_type: 'stories'\n    });\n    if (entries.items) return entries.items;\n    console.log(`Error getting Entries for ${contentType.name}.`);\n  }\n\n  async function fetchStories() {\n    const entries = await client.getEntries({\n      content_type: 'story'\n    });\n    if (entries.items) return entries.items;\n    console.log(`Error getting Entries for ${contentType.name}.`);\n  }\n\n  useEffect(() => {\n    document.body.style.overflow = 'unset';\n    console.log(\"REQUEST :: \", req);\n\n    async function getPopulars() {\n      const allPosts = await fetchPopulars();\n      setPopular([...allPosts]);\n    }\n\n    async function getStoriesCategories() {\n      const allCategories = await fetchStoryCategories();\n      setStories([...allCategories]);\n    }\n\n    async function getStories() {\n      const allStories = await fetchStories();\n      setStory([...allStories]);\n    }\n\n    getStories();\n    getStoriesCategories();\n    getPopulars();\n  }, []);\n\n  const handleToStory = story => {\n    dispatch(actions.setStory(story)); //  await Router.push(`/stories/${story.fields.slug}`)\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, \"Krisna Ahroid | Stories\")), __jsx(BlogLayout, {\n    title: \"Stories\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, __jsx(Hero, {\n    title: \"Stories Resources\",\n    subtitle: \"The more that you read the more things you will know. \",\n    img: ImageHero,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }), __jsx(SliderHero, {\n    items: popular,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }), __jsx(SliderCategories, {\n    items: stories,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }), __jsx(View, {\n    padding: \"100px\",\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, __jsx(View, {\n    margin: \"0 0 50px 0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  }, __jsx(Text, {\n    family: \"daily\",\n    size: \"32\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 21\n    }\n  }, \"Our Stories\")), __jsx(Rows, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  }, story.map((item, index) => __jsx(View, {\n    key: index,\n    className: \"grid-item-3\",\n    onClick: () => handleToStory(item),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 37\n    }\n  }, __jsx(Link, {\n    href: \"/stories/[slug]\",\n    as: `/stories/${item.fields.slug}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 41\n    }\n  }, __jsx(\"a\", {\n    style: {\n      textDecoration: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 45\n    }\n  }, __jsx(CardStories, {\n    title: item.fields.title,\n    label: item.fields.label,\n    image: item.fields.image.fields.file.url,\n    className: \"card-our-stories\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 49\n    }\n  })))))))));\n};\n\nexport default Stories;","map":{"version":3,"sources":["/Users/ahroidlife/Documents/nextjs/blog/pages/stories/stories.jsx"],"names":["React","Component","useEffect","useState","BlogLayout","Hero","ImageHero","SliderHero","SliderCategories","Router","Container","View","Text","Rows","CardStories","Head","Knobs","useDispatch","item","populars","actions","Link","SitemapStream","streamToPromise","client","require","createClient","space","process","env","SPACE_ID","accessToken","ACCESS_TOKEN","Stories","req","res","popular","setPopular","stories","setStories","story","setStory","dispatch","smStream","hostname","headers","host","cacheTime","posts","forEach","post","write","url","slug","changefreq","priority","end","sitemapOutput","toString","writeHead","e","console","log","send","JSON","stringify","fetchPopulars","entries","getEntries","content_type","items","contentType","name","fetchStoryCategories","fetchStories","document","body","style","overflow","getPopulars","allPosts","getStoriesCategories","allCategories","getStories","allStories","handleToStory","map","index","fields","textDecoration","title","label","image","file"],"mappings":"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","sourcesContent":["import React, {Component, useEffect, useState} from 'react'\nimport { BlogLayout } from \"../../components/templates/layouts\";\nimport {Hero} from '../../components/organisms'\nimport ImageHero from '../../assets/illustrations/daily-stories.svg'\nimport {SliderHero, SliderCategories} from '../../components/organisms'\nimport Router from 'next/router'\nimport { Container, View, Text, Rows} from '../../components/atoms'\nimport { CardStories } from '../../components/molecules'\nimport './stories.scss'\nimport Head from 'next/head'\nimport Knobs from './stories.knobs.json'\nimport { useDispatch } from 'react-redux';\nconst {item, populars} = Knobs\n\nimport actions from '../../store/modules/stories/actions'\nimport Link from 'next/link';\nimport { SitemapStream, streamToPromise } from 'sitemap';\n\nconst client = require('contentful').createClient({\n    space: process.env.SPACE_ID,\n    accessToken: process.env.ACCESS_TOKEN\n})\n\nconst Stories = async (req, res) => {\n    const [popular, setPopular] = useState([])\n    const [stories, setStories] = useState([])\n    const [story, setStory] = useState([])\n\n    const dispatch = useDispatch()\n\n    try {\n        const smStream = new SitemapStream({\n          hostname: `https://${req.headers.host}`,\n          cacheTime: 600000,\n        });\n    \n        // List of posts\n        const posts = [];\n    \n        // Create each URL row\n        posts.forEach(post => {\n          smStream.write({\n            url: `/stories/${post.slug}`,\n            changefreq: 'daily',\n            priority: 0.9\n          });\n        });\n    \n        // End sitemap stream\n        smStream.end();\n    \n        // XML sitemap string\n        const sitemapOutput = (await streamToPromise(smStream)).toString();\n    \n        // Change headers\n        res.writeHead(200, {\n          'Content-Type': 'application/xml'\n        });\n    \n        // Display output to user\n        res.end(sitemapOutput);\n      } catch(e) {\n        console.log(e)\n        res.send(JSON.stringify(e))\n      }\n\n    async function fetchPopulars(){\n        const entries = await client.getEntries({\n            content_type: 'popularStories'\n        })\n        if (entries.items) return entries.items\n        console.log(`Error getting Entries for ${contentType.name}.`)\n    }\n\n    async function fetchStoryCategories(){\n        const entries = await client.getEntries({\n            content_type: 'stories'\n        })\n        if (entries.items) return entries.items\n        console.log(`Error getting Entries for ${contentType.name}.`)\n    }\n    \n    async function fetchStories(){\n        const entries = await client.getEntries({\n            content_type: 'story'\n        })\n        if (entries.items) return entries.items\n        console.log(`Error getting Entries for ${contentType.name}.`)\n    }\n    \n    useEffect(() => {\n        document.body.style.overflow = 'unset';\n        console.log(\"REQUEST :: \",req)\n\n        async function getPopulars() {\n            const allPosts = await fetchPopulars()\n            setPopular([...allPosts])\n          }\n\n        async function getStoriesCategories(){\n            const allCategories = await fetchStoryCategories()\n            setStories([...allCategories])\n        }\n\n        async function getStories(){\n            const allStories = await fetchStories()\n            setStory([...allStories])\n        }\n\n        getStories()\n        getStoriesCategories()\n        getPopulars()\n    },[])\n\n    const handleToStory = (story) => {\n         dispatch(actions.setStory(story))\n        //  await Router.push(`/stories/${story.fields.slug}`)\n    }\n\n    return (\n        <>\n        <Head>\n            <title>Krisna Ahroid | Stories</title>\n        </Head>\n        <BlogLayout title=\"Stories\">\n            <Hero\n                title=\"Stories Resources\"\n                subtitle=\"The more that you read the more things you will know. \"\n                img={ImageHero}/>\n\n            <SliderHero items={popular}/>\n\n            <SliderCategories items={stories}/>\n\n            <View padding=\"100px\" direction=\"column\">\n                <View margin=\"0 0 50px 0\">\n                    <Text family=\"daily\" size=\"32\" >Our Stories</Text>\n                </View>\n                <Rows>\n                    {\n                        story.map((item, index) => (\n                                    <View key={index} className=\"grid-item-3\" onClick={() => handleToStory(item)}>\n                                        <Link href=\"/stories/[slug]\" as={`/stories/${item.fields.slug}`}>\n                                            <a  style={{textDecoration: 'none'}}>\n                                                <CardStories title={item.fields.title} label={item.fields.label}  image={item.fields.image.fields.file.url} className=\"card-our-stories\"/>\n                                            </a>\n                                        </Link>\n                                    </View>\n                        ))\n                    }\n                </Rows>\n            </View>\n        </BlogLayout> \n        </>\n        )\n        \n}\n\nexport default Stories;"]},"metadata":{},"sourceType":"module"}