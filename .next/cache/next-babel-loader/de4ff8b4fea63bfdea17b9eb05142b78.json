{"ast":null,"code":"var _jsxFileName = \"/Users/ahroidlife/Documents/nextjs/blog/pages/stories/[slug].jsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { BlogLayout } from \"../../components/templates/layouts\";\nimport { Container, View, Text, Image, Badge } from '../../components/atoms';\nimport './stories.scss';\nimport Link from 'next/link';\nimport { useRouter } from 'next/dist/client/router';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as Markdown from 'react-markdown';\nimport { documentToHtmlString } from '@contentful/rich-text-html-renderer';\nimport { documentToReactComponents } from '@contentful/rich-text-react-renderer';\nimport { BLOCKS, MARKS } from '@contentful/rich-text-types';\nimport actions from '../../store/modules/stories/actions';\n\nconst Bold = ({\n  children\n}) => __jsx(\"p\", {\n  className: \"bold\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 32\n  }\n}, children);\n\nconst client = require('contentful').createClient({\n  space: process.env.SPACE_ID,\n  accessToken: process.env.ACCESS_TOKEN\n});\n\nconst Story = props => {\n  const router = useRouter();\n  const {\n    0: slug,\n    1: setSlug\n  } = useState('');\n  const {\n    0: story,\n    1: setStory\n  } = useState({});\n  const dispatch = useDispatch();\n\n  async function getSingle(slug) {\n    client.getEntries({\n      content_type: 'story',\n      'fields.slug[match]': slug\n    }).then(res => {\n      //   setStory(res.items[0].fields)\n      dispatch(actions.setStory(res.items));\n    }).catch(err => console.loge(err));\n  }\n\n  useEffect(() => {\n    let param = router.query.slug;\n    setSlug(param);\n    getSingle(param);\n  }, []);\n  console.log(story);\n  const options = {\n    renderMark: {\n      [MARKS.BOLD]: text => __jsx(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 33\n        }\n      }, text)\n    },\n    renderNode: {\n      [BLOCKS.PARAGRAPH]: (node, children) => __jsx(Text, {\n        variant: \"grey\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 51\n        }\n      }, children),\n      [BLOCKS.EMBEDDED_ASSET]: node => {\n        // console.log(node)\n        let {\n          description,\n          title,\n          file\n        } = node.data.target.fields;\n        return __jsx(\"img\", {\n          src: file.url,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 20\n          }\n        });\n      }\n    },\n    renderText: text => {\n      return text.split('\\n').reduce((children, textSegment, index) => {\n        return [...children, index > 0 && __jsx(\"br\", {\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 49\n          }\n        }), textSegment];\n      }, []);\n    }\n  };\n  const content = documentToReactComponents(story.body, options);\n  return __jsx(BlogLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, __jsx(Container, {\n    className: \"story-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, __jsx(View, {\n    className: \"story-content\",\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, __jsx(Link, {\n    href: \"/stories\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 25\n    }\n  }, __jsx(View, {\n    className: \"story-close-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 29\n    }\n  }, __jsx(Image, {\n    src: \"/static/illustrations/close-dark.svg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 33\n    }\n  })))), __jsx(View, {\n    className: \"story-content-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  }, __jsx(\"h1\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 25\n    }\n  }, story.title), __jsx(Text, {\n    className: \"subtitle\",\n    family: \"quicksand\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 25\n    }\n  }, story.subtitle)), __jsx(View, {\n    className: \"story-content-body\",\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  }, content), __jsx(View, {\n    className: \"story-content-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  }, __jsx(View, {\n    className: \"tags-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 25\n    }\n  }, __jsx(Text, {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 29\n    }\n  }, \"Tags\"), __jsx(View, {\n    className: \"tags\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 29\n    }\n  }, __jsx(Badge, {\n    title: \"Storybook\",\n    backgroundColor: \"#FFEDED\",\n    color: \"#FF5252\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 33\n    }\n  }), __jsx(Badge, {\n    title: \"React\",\n    backgroundColor: \"#FFEDED\",\n    color: \"#FF5252\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 34\n    }\n  }))), __jsx(View, {\n    className: \"publish-date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 25\n    }\n  }, __jsx(Text, {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 29\n    }\n  }, \"Publish date\"), __jsx(Text, {\n    className: \"subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 29\n    }\n  }, \"2020-04-28 14:50:00\"))))));\n};\n\nexport default Story;","map":{"version":3,"sources":["/Users/ahroidlife/Documents/nextjs/blog/pages/stories/[slug].jsx"],"names":["React","useEffect","useState","BlogLayout","Container","View","Text","Image","Badge","Link","useRouter","useSelector","useDispatch","Markdown","documentToHtmlString","documentToReactComponents","BLOCKS","MARKS","actions","Bold","children","client","require","createClient","space","process","env","SPACE_ID","accessToken","ACCESS_TOKEN","Story","props","router","slug","setSlug","story","setStory","dispatch","getSingle","getEntries","content_type","then","res","items","catch","err","console","loge","param","query","log","options","renderMark","BOLD","text","renderNode","PARAGRAPH","node","EMBEDDED_ASSET","description","title","file","data","target","fields","url","renderText","split","reduce","textSegment","index","content","body","subtitle"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { BlogLayout } from \"../../components/templates/layouts\";\nimport { Container, View, Text, Image, Badge} from '../../components/atoms'\n\nimport './stories.scss'\nimport Link from 'next/link';\nimport { useRouter } from 'next/dist/client/router';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as Markdown from 'react-markdown'\nimport { documentToHtmlString } from '@contentful/rich-text-html-renderer';\nimport { documentToReactComponents } from '@contentful/rich-text-react-renderer';\nimport { BLOCKS, MARKS } from '@contentful/rich-text-types';\nimport actions from '../../store/modules/stories/actions'\n\nconst Bold = ({ children }) => <p className=\"bold\">{children}</p>;\n\nconst client = require('contentful').createClient({\n    space: process.env.SPACE_ID,\n    accessToken: process.env.ACCESS_TOKEN\n})\n\nconst Story = (props) => {\n    const router = useRouter()\n    const [slug, setSlug] = useState('')\n    const [story, setStory] = useState({})\n\n    const dispatch = useDispatch()\n\n        \n    async function getSingle(slug){\n        client.getEntries({\n            content_type: 'story',\n            'fields.slug[match]': slug\n          })\n          .then(res => {\n            //   setStory(res.items[0].fields)\n              dispatch(actions.setStory(res.items))\n              \n            })\n          .catch(err => console.loge(err))\n          \n    }\n\n    useEffect(() => {\n        let param = router.query.slug\n        setSlug(param)\n        \n        getSingle(param)\n        \n    },[])\n    console.log(story)\n\n    const options = {\n        renderMark: {\n          [MARKS.BOLD]: text => <Text>{text}</Text>,\n        },\n        renderNode: {\n          [BLOCKS.PARAGRAPH]: (node, children) => <Text variant=\"grey\">{children}</Text>,\n          [BLOCKS.EMBEDDED_ASSET]: node => {\n            // console.log(node)\n            let { description, title, file } = node.data.target.fields\n\n            return <img src={file.url} />\n          },\n        },\n        renderText: text => {\n            return text.split('\\n').reduce((children, textSegment, index) => {\n              return [...children, index > 0 && <br key={index} />, textSegment];\n            }, []);\n          },\n      };\n\n    const content = documentToReactComponents(story.body, options)\n      \n    return (\n        <BlogLayout>\n            <Container className=\"story-container\">\n                <View className=\"story-content\" direction=\"column\">\n                    <Link href=\"/stories\">\n                        <a>\n                            <View className=\"story-close-btn\">\n                                <Image src=\"/static/illustrations/close-dark.svg\"/>\n                            </View>\n                        </a>\n                    </Link>\n                    <View className=\"story-content-header\">\n                        <h1 className=\"title\">{story.title}</h1>\n                        <Text className=\"subtitle\" family=\"quicksand\">{story.subtitle}</Text>\n                        {/* <Image src={`https:${story.heroImage.fields.file.url}`} className=\"hero-image\"/> */}\n                    </View>\n                    <View className=\"story-content-body\" direction=\"column\">\n                        {/* <Markdown source={content} /> */}\n                        {content}\n                    </View>\n                    <View className=\"story-content-footer\">\n                        <View className=\"tags-wrapper\">\n                            <Text className=\"title\">Tags</Text>\n                            <View className=\"tags\">\n                                <Badge \n                                title=\"Storybook\"\n                                backgroundColor=\"#FFEDED\"\n                                color=\"#FF5252\"/>\n                                 <Badge \n                                title=\"React\"\n                                backgroundColor=\"#FFEDED\"\n                                color=\"#FF5252\"/>\n                            </View>\n                        </View>\n                        <View className=\"publish-date\">\n                            <Text className=\"title\">Publish date</Text>\n                            <Text className=\"subtitle\">2020-04-28 14:50:00</Text>\n                        </View>\n                    </View>\n                </View>\n            </Container>\n        </BlogLayout>\n    )\n}\n\nexport default Story"]},"metadata":{},"sourceType":"module"}