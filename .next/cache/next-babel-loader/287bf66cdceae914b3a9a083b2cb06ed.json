{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport StyledContainer from './container.styles.jsx';\n\nconst Container = (_ref) => {\n  let {\n    children,\n    isEqualWidth,\n    isEqualHeight,\n    flexDirection,\n    backgroundColor,\n    display,\n    justifyContent,\n    alignItems,\n    boxSizing,\n    padding,\n    boxShadow,\n    position,\n    zIndex\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"children\", \"isEqualWidth\", \"isEqualHeight\", \"flexDirection\", \"backgroundColor\", \"display\", \"justifyContent\", \"alignItems\", \"boxSizing\", \"padding\", \"boxShadow\", \"position\", \"zIndex\"]);\n\n  return __jsx(StyledContainer, _extends({\n    display: display,\n    justifyContent: justifyContent,\n    alignItems: alignItems,\n    flexDirection: flexDirection,\n    isEqualHeight: isEqualHeight,\n    isEqualWidth: isEqualWidth,\n    backgroundColor: backgroundColor,\n    boxSizing: boxSizing,\n    padding: padding,\n    boxShadow: boxShadow,\n    position: position,\n    zIndex: zIndex\n  }, props), children);\n};\n\nexport default Container;","map":null,"metadata":{},"sourceType":"module"}