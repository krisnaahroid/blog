{"ast":null,"code":"var _jsxFileName = \"/Users/ahroidlife/Documents/nextjs/blog/pages/stories/[slug].jsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { BlogLayout } from \"../../components/templates/layouts\";\nimport { Container, View, Text, Image, Badge } from '../../components/atoms';\nimport './stories.scss';\nimport Link from 'next/link';\nimport { useRouter } from 'next/dist/client/router';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as Markdown from 'react-markdown';\nimport { documentToHtmlString } from '@contentful/rich-text-html-renderer';\nimport { documentToReactComponents } from '@contentful/rich-text-react-renderer';\nimport { BLOCKS, MARKS } from '@contentful/rich-text-types';\nimport actions from '../../store/modules/stories/actions';\nimport { NextSeo } from 'next-seo';\n\nconst Bold = ({\n  children\n}) => __jsx(\"p\", {\n  className: \"bold\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 32\n  }\n}, children);\n\nconst client = require('contentful').createClient({\n  space: process.env.SPACE_ID,\n  accessToken: process.env.ACCESS_TOKEN\n});\n\nconst Story = ({\n  story\n}) => {\n  console.log(\"RES :: \", story);\n  const options = {\n    renderMark: {\n      [MARKS.BOLD]: text => __jsx(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 33\n        }\n      }, text)\n    },\n    renderNode: {\n      [BLOCKS.PARAGRAPH]: (node, children) => __jsx(Text, {\n        variant: \"grey\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 51\n        }\n      }, children),\n      [BLOCKS.EMBEDDED_ASSET]: node => {\n        // console.log(node)\n        let {\n          description,\n          title,\n          file\n        } = node.data.target.fields;\n        return __jsx(\"img\", {\n          src: file.url,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 20\n          }\n        });\n      }\n    },\n    renderText: text => {\n      return text.split('\\n').reduce((children, textSegment, index) => {\n        return [...children, index > 0 && __jsx(\"br\", {\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 49\n          }\n        }), textSegment];\n      }, []);\n    }\n  };\n  const content = documentToReactComponents(story.items[0].fields.body, options);\n  return __jsx(React.Fragment, null, __jsx(NextSeo, {\n    openGraph: {\n      title: story.items[0].fields.title,\n      description: story.items[0].fields.subtitle,\n      url: `https://ahroidlife.com/stories/${story.items[0].fields.slug}`,\n      type: 'article',\n      article: {\n        authors: [story.items[0].fields.author.fields.name],\n        tags: [story.items[0].fields.tags]\n      },\n      images: [{\n        url: `https:${story.items[0].fields.heroImage.fields.file.url}`,\n        width: story.items[0].fields.heroImage.fields.file.details.image.width,\n        height: story.items[0].fields.heroImage.fields.file.details.image.height,\n        alt: story.items[0].fields.heroImage.fields.file.title\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }), __jsx(BlogLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, __jsx(Container, {\n    className: \"story-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, __jsx(View, {\n    className: \"story-content\",\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }, __jsx(Link, {\n    href: \"/stories\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 25\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 29\n    }\n  }, __jsx(View, {\n    className: \"story-close-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 33\n    }\n  }, __jsx(Image, {\n    src: \"/static/illustrations/close-dark.svg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 37\n    }\n  })))), __jsx(View, {\n    className: \"story-content-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 25\n    }\n  }, __jsx(\"h1\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 29\n    }\n  }, story.items[0].fields.title), __jsx(Text, {\n    className: \"subtitle\",\n    family: \"quicksand\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 29\n    }\n  }, story.items[0].fields.subtitle), __jsx(Image, {\n    src: `https:${story.items[0].fields.heroImage.fields.file.url}`,\n    className: \"hero-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 29\n    }\n  })), __jsx(View, {\n    className: \"story-content-body\",\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 25\n    }\n  }, content), __jsx(View, {\n    className: \"story-content-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 25\n    }\n  }, __jsx(View, {\n    className: \"tags-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 29\n    }\n  }, __jsx(Text, {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 33\n    }\n  }, \"Tags\"), __jsx(View, {\n    className: \"tags\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 33\n    }\n  }, __jsx(Badge, {\n    title: \"Storybook\",\n    backgroundColor: \"#FFEDED\",\n    color: \"#FF5252\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 37\n    }\n  }), __jsx(Badge, {\n    title: \"React\",\n    backgroundColor: \"#FFEDED\",\n    color: \"#FF5252\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 37\n    }\n  }))), __jsx(View, {\n    className: \"publish-date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 29\n    }\n  }, __jsx(Text, {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 33\n    }\n  }, \"Publish date\"), __jsx(Text, {\n    className: \"subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 33\n    }\n  }, \"2020-04-28 14:50:00\")))))));\n};\n\nStory.getInitialProps = async ({\n  query\n}) => {\n  const res = await client.getEntries({\n    content_type: 'story',\n    'fields.slug[match]': query.slug\n  });\n  return {\n    story: res\n  };\n};\n\nexport default Story;","map":{"version":3,"sources":["/Users/ahroidlife/Documents/nextjs/blog/pages/stories/[slug].jsx"],"names":["React","useEffect","useState","BlogLayout","Container","View","Text","Image","Badge","Link","useRouter","useSelector","useDispatch","Markdown","documentToHtmlString","documentToReactComponents","BLOCKS","MARKS","actions","NextSeo","Bold","children","client","require","createClient","space","process","env","SPACE_ID","accessToken","ACCESS_TOKEN","Story","story","console","log","options","renderMark","BOLD","text","renderNode","PARAGRAPH","node","EMBEDDED_ASSET","description","title","file","data","target","fields","url","renderText","split","reduce","textSegment","index","content","items","body","subtitle","slug","type","article","authors","author","name","tags","images","heroImage","width","details","image","height","alt","getInitialProps","query","res","getEntries","content_type"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { BlogLayout } from \"../../components/templates/layouts\";\nimport { Container, View, Text, Image, Badge} from '../../components/atoms'\n\nimport './stories.scss'\nimport Link from 'next/link';\nimport { useRouter } from 'next/dist/client/router';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as Markdown from 'react-markdown'\nimport { documentToHtmlString } from '@contentful/rich-text-html-renderer';\nimport { documentToReactComponents } from '@contentful/rich-text-react-renderer';\nimport { BLOCKS, MARKS } from '@contentful/rich-text-types';\nimport actions from '../../store/modules/stories/actions'\n\nimport { NextSeo } from 'next-seo';\n\nconst Bold = ({ children }) => <p className=\"bold\">{children}</p>;\n\nconst client = require('contentful').createClient({\n    space: process.env.SPACE_ID,\n    accessToken: process.env.ACCESS_TOKEN\n})\n\n\nconst Story = ({story}) => {\n    console.log(\"RES :: \", story)\n\n    const options = {\n        renderMark: {\n          [MARKS.BOLD]: text => <Text>{text}</Text>,\n        },\n        renderNode: {\n          [BLOCKS.PARAGRAPH]: (node, children) => <Text variant=\"grey\">{children}</Text>,\n          [BLOCKS.EMBEDDED_ASSET]: node => {\n            // console.log(node)\n            let { description, title, file } = node.data.target.fields\n\n            return <img src={file.url} />\n          },\n        },\n        renderText: text => {\n            return text.split('\\n').reduce((children, textSegment, index) => {\n              return [...children, index > 0 && <br key={index} />, textSegment];\n            }, []);\n          },\n      };\n\n    const content = documentToReactComponents(story.items[0].fields.body, options)\n      \n    return (\n        <>\n        <NextSeo\n            openGraph={{\n                title: story.items[0].fields.title,\n                description: story.items[0].fields.subtitle,\n                url: `https://ahroidlife.com/stories/${story.items[0].fields.slug}`,\n                type: 'article',\n                article: {\n                authors: [\n                    story.items[0].fields.author.fields.name,\n                ],\n                tags: [story.items[0].fields.tags],\n                },\n                images: [\n                {\n                    url: `https:${story.items[0].fields.heroImage.fields.file.url}`,\n                    width: story.items[0].fields.heroImage.fields.file.details.image.width,\n                    height: story.items[0].fields.heroImage.fields.file.details.image.height,\n                    alt: story.items[0].fields.heroImage.fields.file.title,\n                },\n                ],\n            }}\n            />\n            <BlogLayout>\n                <Container className=\"story-container\">\n                    <View className=\"story-content\" direction=\"column\">\n                        <Link href=\"/stories\">\n                            <a>\n                                <View className=\"story-close-btn\">\n                                    <Image src=\"/static/illustrations/close-dark.svg\"/>\n                                </View>\n                            </a>\n                        </Link>\n                        <View className=\"story-content-header\">\n                            <h1 className=\"title\">{story.items[0].fields.title}</h1>\n                            <Text className=\"subtitle\" family=\"quicksand\">{story.items[0].fields.subtitle}</Text>\n                            <Image src={`https:${story.items[0].fields.heroImage.fields.file.url}`} className=\"hero-image\"/>\n                        </View>\n                        <View className=\"story-content-body\" direction=\"column\">\n                            {/* <Markdown source={content} /> */}\n                            {content}\n                        </View>\n                        <View className=\"story-content-footer\">\n                            <View className=\"tags-wrapper\">\n                                <Text className=\"title\">Tags</Text>\n                                <View className=\"tags\">\n                                    <Badge \n                                    title=\"Storybook\"\n                                    backgroundColor=\"#FFEDED\"\n                                    color=\"#FF5252\"/>\n                                    <Badge \n                                    title=\"React\"\n                                    backgroundColor=\"#FFEDED\"\n                                    color=\"#FF5252\"/>\n                                </View>\n                            </View>\n                            <View className=\"publish-date\">\n                                <Text className=\"title\">Publish date</Text>\n                                <Text className=\"subtitle\">2020-04-28 14:50:00</Text>\n                            </View>\n                        </View>\n                    </View>\n                </Container>\n            </BlogLayout>\n        </>\n    )\n}\n\nStory.getInitialProps = async ({ query }) => {\n    const res = await client.getEntries({\n        content_type: 'story',\n        'fields.slug[match]': query.slug\n    })\n    \n    return { story: res }\n  }\n\nexport default Story"]},"metadata":{},"sourceType":"module"}