{"ast":null,"code":"import { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport * as reducers from \"./modules\";\nimport thunk from 'redux-thunk';\nexport default function configureStore(initialState = {}) {\n  const rootReducer = combineReducers(reducers);\n  const composeEnhancers = false && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({// Specify extension’s options like name, actionsBlacklist, actionsCreators,\n    // serialize...\n  }) : compose;\n  const enhancer = composeEnhancers(applyMiddleware(thunk) // other store enhancers if any\n  );\n  const store = createStore(rootReducer, initialState, enhancer);\n  return store;\n}","map":{"version":3,"sources":["/Users/ahroidlife/Documents/nextjs/blog/store/index.js"],"names":["createStore","applyMiddleware","combineReducers","reducers","thunk","configureStore","initialState","rootReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","enhancer","store"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,EAAsCC,eAAtC,QAA4D,OAA5D;AACA,OAAO,KAAKC,QAAZ,MAA0B,WAA1B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,eAAe,SAASC,cAAT,CAAwBC,YAAY,GAAG,EAAvC,EAA2C;AACxD,QAAMC,WAAW,GAAGL,eAAe,CAACC,QAAD,CAAnC;AAEA,QAAMK,gBAAgB,GAAG,SAA8BC,MAAM,CAACC,oCAArC,GACrBD,MAAM,CAACC,oCAAP,CAA4C,CAC5C;AACA;AAF4C,GAA5C,CADqB,GAKrBC,OALJ;AAOA,QAAMC,QAAQ,GAAGJ,gBAAgB,CAACP,eAAe,CAACG,KAAD,CAAhB,CACjC;AADiC,GAAjC;AAGA,QAAMS,KAAK,GAAGb,WAAW,CAACO,WAAD,EAAcD,YAAd,EAA4BM,QAA5B,CAAzB;AAEA,SAAOC,KAAP;AACD","sourcesContent":["import {createStore, applyMiddleware, combineReducers} from \"redux\";\nimport * as reducers from \"./modules\";\nimport thunk from 'redux-thunk';\n\nexport default function configureStore(initialState = {}) {\n  const rootReducer = combineReducers(reducers);\n\n  const composeEnhancers = typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n      // Specify extension’s options like name, actionsBlacklist, actionsCreators,\n      // serialize...\n    })\n    : compose;\n\n  const enhancer = composeEnhancers(applyMiddleware(thunk),\n  // other store enhancers if any\n  );\n  const store = createStore(rootReducer, initialState, enhancer);\n\n  return store\n}\n"]},"metadata":{},"sourceType":"module"}