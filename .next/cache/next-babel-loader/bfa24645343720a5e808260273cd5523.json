{"ast":null,"code":"import styled from 'styled-components';\nimport breakpoints from '../../particles/breakpoints';\n\nconst isDisplayProperty = props => {\n  switch (props.isEqualFlex) {\n    case \"flex\":\n      return \"flex\";\n      break;\n\n    case \"block\":\n      return \"block\";\n      break;\n\n    case \"inline-block\":\n      return \"inline-block\";\n      break;\n\n    default:\n      return \"flex\";\n      break;\n  }\n};\n\nconst masked = props => {\n  if (props.masked) {\n    return \"hidden\";\n  } else {\n    return \"visible\";\n  }\n};\n\nexport const StyledView = styled.div.withConfig({\n  displayName: \"viewstyles__StyledView\",\n  componentId: \"sc-1egp7p8-0\"\n})([\"display:\", \";flex-direction:\", \";flex:\", \";justify-content:\", \";align-items:\", \";width:\", \";height:\", \";background-color:\", \";border-radius:\", \";box-shadow:\", \";overflow:\", \";position:\", \";padding:\", \";margin:\", \";box-sizing:border-box;&.half{width:calc(50% - 9px);margin:0 5px 30px 0;&:nth-child(2n){margin:0 0 10px 5px;}}@media \", \"{width:\", \" !important;height:\", \" !important;background-color:\", \";flex-direction:\", \";}\"], props => isDisplayProperty(props), props => props.direction, props => props.flexValue ? '1' : 'none', props => props.justify, props => !props.align ? 'none' : props.align, props => props.width, props => props.height, props => props.backgroundColor, props => props.radius, props => props.isBoxShadow, props => props.overflow, props => props.position, props => props.padding, props => props.margin, breakpoints.mobileL, props => props.isEqualWidth, props => props.isEqualHeight, props => props.isEqualBackground, props => props.isEqualDirection);\nexport default StyledView;","map":{"version":3,"sources":["/Users/ahroidlife/Documents/nextjs/blog/components/atoms/views/view.styles.jsx"],"names":["styled","breakpoints","isDisplayProperty","props","isEqualFlex","masked","StyledView","div","direction","flexValue","justify","align","width","height","backgroundColor","radius","isBoxShadow","overflow","position","padding","margin","mobileL","isEqualWidth","isEqualHeight","isEqualBackground","isEqualDirection"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;;AAEA,MAAMC,iBAAiB,GAAGC,KAAK,IAAI;AAE/B,UAAOA,KAAK,CAACC,WAAb;AACI,SAAK,MAAL;AACI,aAAO,MAAP;AACA;;AACJ,SAAK,OAAL;AACI,aAAO,OAAP;AACA;;AACJ,SAAK,cAAL;AACI,aAAO,cAAP;AACA;;AACJ;AACI,aAAO,MAAP;AACA;AAZR;AAcH,CAhBD;;AAkBA,MAAMC,MAAM,GAAGF,KAAK,IAAI;AAEpB,MAAGA,KAAK,CAACE,MAAT,EAAgB;AACZ,WAAO,QAAP;AACH,GAFD,MAEK;AACD,WAAO,SAAP;AACH;AACJ,CAPD;;AASA,OAAO,MAAMC,UAAU,GAAGN,MAAM,CAACO,GAAV;AAAA;AAAA;AAAA,gbACRJ,KAAK,IAAID,iBAAiB,CAACC,KAAD,CADlB,EAEDA,KAAK,IAAIA,KAAK,CAACK,SAFd,EAGXL,KAAK,IAAIA,KAAK,CAACM,SAAN,GAAkB,GAAlB,GAAuB,MAHrB,EAIAN,KAAK,IAAIA,KAAK,CAACO,OAJf,EAKJP,KAAK,IAAI,CAACA,KAAK,CAACQ,KAAP,GAAe,MAAf,GAAwBR,KAAK,CAACQ,KALnC,EAMVR,KAAK,IAAIA,KAAK,CAACS,KANL,EAOTT,KAAK,IAAIA,KAAK,CAACU,MAPN,EAQCV,KAAK,IAAIA,KAAK,CAACW,eARhB,EASFX,KAAK,IAAIA,KAAK,CAACY,MATb,EAULZ,KAAK,IAAIA,KAAK,CAACa,WAVV,EAWPb,KAAK,IAAIA,KAAK,CAACc,QAXR,EAYPd,KAAK,IAAIA,KAAK,CAACe,QAZR,EAaRf,KAAK,IAAIA,KAAK,CAACgB,OAbP,EAcThB,KAAK,IAAIA,KAAK,CAACiB,MAdN,EA0BVnB,WAAW,CAACoB,OA1BF,EA2BNlB,KAAK,IAAIA,KAAK,CAACmB,YA3BT,EA4BLnB,KAAK,IAAIA,KAAK,CAACoB,aA5BV,EA6BKpB,KAAK,IAAIA,KAAK,CAACqB,iBA7BpB,EA8BGrB,KAAK,IAAIA,KAAK,CAACsB,gBA9BlB,CAAhB;AAkCP,eAAenB,UAAf","sourcesContent":["import styled from 'styled-components'\nimport breakpoints from '../../particles/breakpoints'\n\nconst isDisplayProperty = props => {\n\n    switch(props.isEqualFlex){\n        case \"flex\":\n            return \"flex\";\n            break;\n        case \"block\":\n            return \"block\";\n            break;\n        case \"inline-block\":\n            return \"inline-block\";\n            break;\n        default: \n            return \"flex\"\n            break\n    }\n}\n\nconst masked = props => {\n\n    if(props.masked){\n        return \"hidden\";\n    }else{\n        return \"visible\";\n    }\n}\n\nexport const StyledView = styled.div`\n    display: ${props => isDisplayProperty(props)};\n    flex-direction: ${props => props.direction};\n    flex: ${props => props.flexValue ? '1': 'none'};\n    justify-content: ${props => props.justify};\n    align-items: ${props => !props.align ? 'none' : props.align};\n    width: ${props => props.width};\n    height: ${props => props.height};\n    background-color: ${props => props.backgroundColor};\n    border-radius: ${props => props.radius};\n    box-shadow: ${props => props.isBoxShadow}; //10px 20px 50px rgba(149, 163, 180, 0.1);\n    overflow: ${props => props.overflow};\n    position: ${props => props.position};\n    padding: ${props => props.padding};\n    margin: ${props => props.margin};\n    box-sizing: border-box;\n    \n    &.half {\n        width: calc(50% - 9px);\n        margin: 0 5px 30px 0;\n        \n        &:nth-child(2n) {\n          margin: 0 0 10px 5px;\n        }\n    }\n\n    @media ${breakpoints.mobileL} {\n        width: ${props => props.isEqualWidth} !important;\n        height: ${props => props.isEqualHeight} !important;\n        background-color: ${props => props.isEqualBackground};\n        flex-direction: ${props => props.isEqualDirection};\n    }\n`\n\nexport default StyledView"]},"metadata":{},"sourceType":"module"}