{"ast":null,"code":"var _jsxFileName = \"/Users/ahroidlife/Documents/nextjs/blog/components/molecules/forms/textIcon/texticon.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Container, View, Input, Icon, Text } from '../../../atoms';\nimport './styles.scss';\nconst people = [\"Siri\", \"Alexa\", \"Google\", \"Facebook\", \"Twitter\", \"Linkedin\", \"Sinkedin\"];\n\nconst client = require('contentful').createClient({\n  space: process.env.SPACE_ID,\n  accessToken: process.env.ACCESS_TOKEN\n});\n\nconst TextIcon = ({\n  placeholder,\n  left,\n  props\n}) => {\n  const [searchTerm, setSearchTerm] = React.useState(\"\");\n  const [searchResults, setSearchResults] = React.useState([]);\n\n  const handleChange = event => {\n    setSearchTerm(event.target.value);\n  };\n\n  async function searching() {\n    const entries = await client.getEntries({\n      content_type: 'story',\n      'fields.title[match]': 'driven'\n    });\n    console.log(entries.items);\n  }\n\n  React.useEffect(() => {\n    const results = people.filter(person => person.toLowerCase().includes(searchTerm));\n    setSearchResults(results);\n  }, [searchTerm]);\n  return __jsx(Container, {\n    className: \"header-input-search\",\n    position: \"relative\",\n    style: {\n      left: left\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, __jsx(Icon, {\n    name: \"search\",\n    position: \"absolute\",\n    left: \"15px\",\n    top: \"9px\",\n    width: \"1.3em\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }), __jsx(Input, {\n    className: \"inputTextIcon\",\n    placeholder: placeholder,\n    width: \"300px\",\n    padding: \"5px 30px 5px 45px\",\n    value: searchTerm,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }), __jsx(View, {\n    className: \"search-results\",\n    direction: \"column\",\n    isEqualFlex: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, __jsx(View, {\n    height: \"30px\",\n    justify: \"space-between\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, __jsx(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }, __jsx(Text, {\n    weight: \"medium\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 25\n    }\n  }, \"Results of \", __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 58\n    }\n  }, \"Trigonometry\"))), __jsx(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }, __jsx(View, {\n    className: \"rounded-counter\",\n    justify: \"center\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 25\n    }\n  }, __jsx(Text, {\n    variant: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 29\n    }\n  }, \"4\")))), __jsx(View, {\n    flexValue: \"1\",\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }, searchResults.map(item => __jsx(\"li\", {\n    key: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 25\n    }\n  }, item))))));\n};\n\nexport default TextIcon;","map":{"version":3,"sources":["/Users/ahroidlife/Documents/nextjs/blog/components/molecules/forms/textIcon/texticon.jsx"],"names":["React","Container","View","Input","Icon","Text","people","client","require","createClient","space","process","env","SPACE_ID","accessToken","ACCESS_TOKEN","TextIcon","placeholder","left","props","searchTerm","setSearchTerm","useState","searchResults","setSearchResults","handleChange","event","target","value","searching","entries","getEntries","content_type","console","log","items","useEffect","results","filter","person","toLowerCase","includes","map","item"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {Container, View, Input, Icon, Text} from '../../../atoms'\nimport './styles.scss'\n\nconst people = [\n    \"Siri\",\n    \"Alexa\",\n    \"Google\",\n    \"Facebook\",\n    \"Twitter\",\n    \"Linkedin\",\n    \"Sinkedin\"\n  ];\n\nconst client = require('contentful').createClient({\n    space: process.env.SPACE_ID,\n    accessToken: process.env.ACCESS_TOKEN\n})\n\nconst TextIcon = ({placeholder, left, props}) => {\n\n        const [searchTerm, setSearchTerm] = React.useState(\"\");\n        const [searchResults, setSearchResults] = React.useState([]);\n\n        const handleChange = event => {\n            setSearchTerm(event.target.value);\n        };\n\n        async function searching(){\n            const entries = await client.getEntries({\n                content_type: 'story',\n                'fields.title[match]': 'driven'\n              })\n            \n            console.log(entries.items)\n        }\n\n        React.useEffect(() => {\n            const results = people.filter(person =>\n                person.toLowerCase().includes(searchTerm)\n            );\n            setSearchResults(results);\n        }, [searchTerm]);\n\n    return (\n        <Container className=\"header-input-search\" position=\"relative\" style={{\n            left: left\n        }}>\n            <Icon name=\"search\" position=\"absolute\" left=\"15px\" top=\"9px\" width=\"1.3em\"/>\n            <Input \n            className=\"inputTextIcon\"\n            placeholder={placeholder} \n            width=\"300px\" \n            padding=\"5px 30px 5px 45px\"\n            value={searchTerm}\n            onChange={handleChange}/>\n\n            <View className=\"search-results\"  direction=\"column\" isEqualFlex=\"none\">\n                <View height=\"30px\" justify=\"space-between\" align=\"center\">\n                    <View>\n                        <Text weight=\"medium\">Results of <strong>Trigonometry</strong></Text>\n                    </View>\n                    <View>\n                        <View className=\"rounded-counter\" justify=\"center\" align=\"center\">\n                            <Text variant=\"secondary\">4</Text>\n                        </View>\n                    </View>\n                </View>\n                <View flexValue=\"1\" className=\"content\">\n                    <ul>\n                        {searchResults.map(item => (\n                        <li key={item}>{item}</li>\n                        ))}\n                    </ul>\n                </View>\n            </View>\n        </Container>\n    )\n}\n\nexport default TextIcon"]},"metadata":{},"sourceType":"module"}