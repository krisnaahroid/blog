{"ast":null,"code":"var _jsxFileName = \"/Users/ahroidlife/Documents/nextjs/blog/pages/_app.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport Router from 'next/router';\nimport NProgress from 'nprogress';\nRouter.events.on('routeChangeStart', url => {\n  console.log(`Loading: ${url}`);\n  NProgress.start();\n});\nRouter.events.on('routeChangeComplete', () => NProgress.done());\nRouter.events.on('routeChangeError', () => NProgress.done());\n\nconst App = ({\n  Component,\n  pageProps\n}) => {\n  // Only uncomment this method if you have blocking data requirements for\n  // every single page in your application. This disables the ability to\n  // perform automatic static optimization, causing every page in your app to\n  // be server-side rendered.\n  //\n  // static async getInitialProps(appContext) {\n  //   // calls page's `getInitialProps` and fills `appProps.pageProps`\n  //   const appProps = await App.getInitialProps(appContext);\n  //\n  //   return { ...appProps }\n  // }\n  return __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/ahroidlife/Documents/nextjs/blog/pages/_app.js"],"names":["React","Router","NProgress","events","on","url","console","log","start","done","App","Component","pageProps"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,SAAP,MAAsB,WAAtB;AAGAD,MAAM,CAACE,MAAP,CAAcC,EAAd,CAAiB,kBAAjB,EAAqCC,GAAG,IAAI;AACxCC,EAAAA,OAAO,CAACC,GAAR,CAAa,YAAWF,GAAI,EAA5B;AACAH,EAAAA,SAAS,CAACM,KAAV;AACD,CAHH;AAIAP,MAAM,CAACE,MAAP,CAAcC,EAAd,CAAiB,qBAAjB,EAAwC,MAAMF,SAAS,CAACO,IAAV,EAA9C;AACAR,MAAM,CAACE,MAAP,CAAcC,EAAd,CAAiB,kBAAjB,EAAqC,MAAMF,SAAS,CAACO,IAAV,EAA3C;;AAEA,MAAMC,GAAG,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAA8B;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SACE,MAAC,SAAD,eAAeA,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAGD,CAhBD;;AAkBA,eAAeF,GAAf","sourcesContent":["import React from 'react'\nimport Router from 'next/router';\nimport NProgress from 'nprogress';\n\n\nRouter.events.on('routeChangeStart', url => {\n    console.log(`Loading: ${url}`)\n    NProgress.start()\n  })\nRouter.events.on('routeChangeComplete', () => NProgress.done())\nRouter.events.on('routeChangeError', () => NProgress.done())\n\nconst App = ({ Component, pageProps }) => {\n  // Only uncomment this method if you have blocking data requirements for\n  // every single page in your application. This disables the ability to\n  // perform automatic static optimization, causing every page in your app to\n  // be server-side rendered.\n  //\n  // static async getInitialProps(appContext) {\n  //   // calls page's `getInitialProps` and fills `appProps.pageProps`\n  //   const appProps = await App.getInitialProps(appContext);\n  //\n  //   return { ...appProps }\n  // }\n\n  return (\n    <Component {...pageProps} />\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}