{"ast":null,"code":"import { useState, useEffect } from 'react';\nexport default function useOnScreen(ref, rootMargin = '0px') {\n  // State and setter for storing whether element is visible\n  const {\n    0: isIntersecting,\n    1: setIntersecting\n  } = useState(false);\n  useEffect(() => {\n    const observer = new IntersectionObserver(([entry]) => {\n      // Update our state when observer callback fires\n      setIntersecting(entry.isIntersecting);\n    }, {\n      rootMargin\n    });\n\n    if (ref.current) {\n      observer.observe(ref.current);\n    }\n\n    return () => {\n      observer.unobserve(ref.current);\n    };\n  }, []); // Empty array ensures that effect is only run on mount and unmount\n\n  return isIntersecting;\n}","map":null,"metadata":{},"sourceType":"module"}