{"ast":null,"code":"import styled from 'styled-components';\nimport breakpoints from '../../particles/breakpoints';\n\nconst isBackgroundColor = props => {\n  if (!props.variant) return \"#001CF9\";\n  let color;\n\n  switch (props.variant) {\n    case \"primary\":\n      color = \"#001CF9\";\n      break;\n\n    case \"secondary\":\n      color = \"#F7FBFF\";\n      break;\n\n    default:\n      color = \"#001CF9\";\n      break;\n  }\n\n  return color;\n};\n\nconst isHover = props => {\n  let color;\n\n  switch (props.variant) {\n    case \"primary\":\n      color = \"#F7FBFF\";\n      break;\n\n    case \"secondary\":\n      color = \"#001CF9\";\n      break;\n\n    default:\n      color = \"#001CF9\";\n      break;\n  }\n\n  return color;\n};\n\nconst isCursor = props => {\n  if (props.variant == \"disabled\") {\n    return \"not-allowed\";\n  } else {\n    return \"pointer\";\n  }\n};\n\nconst isColor = props => {\n  if (props.variant == \"secondary\") {\n    return \"#001CF9\";\n  } else {\n    return \"#ffffff\";\n  }\n};\n\nconst isPointer = props => {\n  if (props.variant == \"disabled\") {\n    return \"none\";\n  } else {\n    return \"all\";\n  }\n};\n\nconst border = props => {\n  if (!props.border) return \"none\";\n\n  switch (props.border) {\n    case 'primary':\n      return \"#001CF9\";\n      break;\n\n    case 'secondary':\n      return \"#F7FBFF\";\n\n    default:\n      return \"none\";\n      break;\n  }\n};\n\nexport const StyledButton = styled.button`\n    position: relative;\n    display: inline-block;\n    padding: 8px 12px 8px 12px;\n    width: ${props => props.width};\n    height: ${props => props.height};\n    min-width: 120px;\n    border:  ${props => !props.border ? 'none' : '1px solid ' + border(props)};\n    border-radius: 5px;\n    background-color: ${props => isBackgroundColor(props)};\n    cursor: ${props => isCursor(props)};\n    pointer-events: ${props => isPointer(props)};\n    text-decoration: none;\n    transition: all 0.8s ease;\n    white-space: nowrap;\n    font-family: 'Montserrat', sans-serif;\n    font-style: normal;\n    font-size: 14px;\n    font-weight: 500;\n    line-height: 17px;\n    text-align: center;\n    color: ${props => isColor(props)};\n    &:hover{\n        background: ${props => !props.isFocus ? isHover(props) : 'none'};\n        color: ${props => !props.isFocus ? '#ffffff' : '#001CF9'};\n       \n    box-shadow: 5px 10px 15px rgba(0, 28, 249, 0.25);\n\n\n      }\n    &:focus{\n      outline: none;\n    }\n\n    &:active {\n      outline: none;\n    }\n\n    @media ${breakpoints.mobileL} {\n        width: ${props => props.isEqualWidth} !important;\n        height: ${props => props.isEqualHeight} !important;\n    }\n`;\nexport const StyledLinkButton = styled(StyledButton).attrs({\n  as: \"a\"\n})`\n  text-deocration: none;\n`;\nexport const SyledButtonIcon = styled.span`\n  position: ${props => props.iconPosition};\n  right: ${props => props.iconRight};\n  top: ${props => props.iconTop};\n  left: ${props => props.iconLeft};\n  bottom: ${props => props.iconBottom};\n`;\nexport default StyledButton;","map":{"version":3,"sources":["/Users/ahroidlife/Documents/nextjs/blog/components/atoms/buttons/button.styles.jsx"],"names":["styled","breakpoints","isBackgroundColor","props","variant","color","isHover","isCursor","isColor","isPointer","border","StyledButton","button","width","height","isFocus","mobileL","isEqualWidth","isEqualHeight","StyledLinkButton","attrs","as","SyledButtonIcon","span","iconPosition","iconRight","iconTop","iconLeft","iconBottom"],"mappings":"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","sourcesContent":["import styled from 'styled-components'\nimport breakpoints from '../../particles/breakpoints'\n\nconst isBackgroundColor = props => {\n  if(!props.variant) return \"#001CF9\"\n  \n  let color;\n  switch(props.variant){\n    case \"primary\":\n      color = \"#001CF9\"\n      break;\n    case \"secondary\":\n      color = \"#F7FBFF\"\n      break;\n    default:\n      color = \"#001CF9\"\n      break;\n  }\n\n  return color;\n}\n\n\nconst isHover = props => {\n  let color;\n  switch(props.variant){\n    case \"primary\":\n      color = \"#F7FBFF\"\n      break;\n    case \"secondary\":\n      color = \"#001CF9\"\n      break;\n    default:\n      color = \"#001CF9\"\n      break;\n  }\n  return color;\n}\n\n\nconst isCursor = props => {\n  if(props.variant == \"disabled\"){\n    return \"not-allowed\"\n  }else{\n    return \"pointer\"\n  }\n}\n\nconst isColor = props => {\n  if(props.variant == \"secondary\"){\n    return \"#001CF9\"\n  }else{\n    return \"#ffffff\"\n  }\n}\n\n\nconst isPointer = props => {\n  if(props.variant == \"disabled\"){\n    return \"none\"\n  }else{\n    return \"all\"\n  }\n}\n\nconst border = props => {\n\n  if(!props.border) return \"none\"\n\n  switch (props.border) {\n    case 'primary':\n      return \"#001CF9\"\n      break;\n    case 'secondary':\n      return \"#F7FBFF\"\n    default:\n      return \"none\"\n      break;\n  }\n}\n\nexport const StyledButton = styled.button`\n    position: relative;\n    display: inline-block;\n    padding: 8px 12px 8px 12px;\n    width: ${props => props.width};\n    height: ${props => props.height};\n    min-width: 120px;\n    border:  ${props => !props.border ? 'none' : '1px solid '+border(props)};\n    border-radius: 5px;\n    background-color: ${props => isBackgroundColor(props)};\n    cursor: ${props => isCursor(props)};\n    pointer-events: ${props => isPointer(props)};\n    text-decoration: none;\n    transition: all 0.8s ease;\n    white-space: nowrap;\n    font-family: 'Montserrat', sans-serif;\n    font-style: normal;\n    font-size: 14px;\n    font-weight: 500;\n    line-height: 17px;\n    text-align: center;\n    color: ${props => isColor(props)};\n    &:hover{\n        background: ${props => !props.isFocus ? isHover(props) : 'none'};\n        color: ${props => !props.isFocus ? '#ffffff' : '#001CF9'};\n       \n    box-shadow: 5px 10px 15px rgba(0, 28, 249, 0.25);\n\n\n      }\n    &:focus{\n      outline: none;\n    }\n\n    &:active {\n      outline: none;\n    }\n\n    @media ${breakpoints.mobileL} {\n        width: ${props => props.isEqualWidth} !important;\n        height: ${props => props.isEqualHeight} !important;\n    }\n`\n\nexport const StyledLinkButton = styled(StyledButton).attrs({\n  as: \"a\"\n})`\n  text-deocration: none;\n`;\n\nexport const SyledButtonIcon = styled.span`\n  position: ${props => props.iconPosition};\n  right: ${props => props.iconRight};\n  top: ${props => props.iconTop};\n  left: ${props => props.iconLeft};\n  bottom: ${props => props.iconBottom};\n`\n\nexport default StyledButton"]},"metadata":{},"sourceType":"module"}