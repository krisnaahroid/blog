{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { BlogLayout } from \"../../components/templates/layouts\";\nimport { Container, View, Text, Image, Badge } from '../../components/atoms';\nimport Moment from 'moment';\nimport './stories.scss';\nimport Link from 'next/link';\nimport { useRouter } from 'next/dist/client/router';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as Markdown from 'react-markdown';\nimport { documentToHtmlString } from '@contentful/rich-text-html-renderer';\nimport { documentToReactComponents } from '@contentful/rich-text-react-renderer';\nimport { BLOCKS, MARKS } from '@contentful/rich-text-types';\nimport actions from '../../store/modules/stories/actions';\nimport { NextSeo } from 'next-seo';\n\nvar Bold = function Bold(_ref) {\n  var children = _ref.children;\n  return __jsx(\"p\", {\n    className: \"bold\"\n  }, children);\n};\n\nvar client = require('contentful').createClient({\n  space: process.env.SPACE_ID,\n  accessToken: process.env.ACCESS_TOKEN\n});\n\nvar Story = function Story(_ref2) {\n  var _renderNode;\n\n  var story = _ref2.story;\n  console.log(\"RES :: \", story);\n  var options = {\n    renderMark: _defineProperty({}, MARKS.BOLD, function (text) {\n      return __jsx(Text, null, text);\n    }),\n    renderNode: (_renderNode = {}, _defineProperty(_renderNode, BLOCKS.PARAGRAPH, function (node, children) {\n      return __jsx(Text, {\n        variant: \"grey\"\n      }, children);\n    }), _defineProperty(_renderNode, BLOCKS.EMBEDDED_ASSET, function (node) {\n      // console.log(node)\n      var _node$data$target$fie = node.data.target.fields,\n          description = _node$data$target$fie.description,\n          title = _node$data$target$fie.title,\n          file = _node$data$target$fie.file;\n      return __jsx(\"img\", {\n        src: file.url\n      });\n    }), _renderNode),\n    renderText: function renderText(text) {\n      return text.split('\\n').reduce(function (children, textSegment, index) {\n        return [].concat(_toConsumableArray(children), [index > 0 && __jsx(\"br\", {\n          key: index\n        }), textSegment]);\n      }, []);\n    }\n  };\n  var content = documentToReactComponents(story.items[0].fields.body, options);\n  return __jsx(React.Fragment, null, __jsx(NextSeo, {\n    openGraph: {\n      title: story.items[0].fields.title,\n      description: story.items[0].fields.subtitle,\n      url: \"https://ahroidlife.com/stories/\".concat(story.items[0].fields.slug),\n      type: 'article',\n      article: {\n        authors: [story.items[0].fields.author.fields.name],\n        tags: [story.items[0].fields.tags]\n      },\n      images: [{\n        url: \"https:\".concat(story.items[0].fields.heroImage.fields.file.url),\n        width: story.items[0].fields.heroImage.fields.file.details.image.width,\n        height: story.items[0].fields.heroImage.fields.file.details.image.height,\n        alt: story.items[0].fields.heroImage.fields.file.title\n      }]\n    }\n  }), __jsx(BlogLayout, null, __jsx(Container, {\n    className: \"story-container\"\n  }, __jsx(View, {\n    className: \"story-content\",\n    direction: \"column\"\n  }, __jsx(Link, {\n    href: \"/stories\"\n  }, __jsx(\"a\", null, __jsx(View, {\n    className: \"story-close-btn\"\n  }, __jsx(Image, {\n    src: \"/static/illustrations/close-dark.svg\"\n  })))), __jsx(View, {\n    className: \"story-content-header\"\n  }, __jsx(\"h1\", {\n    className: \"title\"\n  }, story.items[0].fields.title), __jsx(Text, {\n    className: \"subtitle\",\n    family: \"quicksand\"\n  }, story.items[0].fields.subtitle), __jsx(Image, {\n    src: \"https:\".concat(story.items[0].fields.heroImage.fields.file.url),\n    className: \"hero-image\"\n  })), __jsx(View, {\n    className: \"story-content-body\",\n    direction: \"column\"\n  }, content), __jsx(View, {\n    className: \"story-content-footer\"\n  }, __jsx(View, {\n    className: \"tags-wrapper\"\n  }, __jsx(Text, {\n    className: \"title\"\n  }, \"Tags\"), __jsx(View, {\n    className: \"tags\"\n  }, story.items[0].fields.tags.map(function (tag, index) {\n    return __jsx(Badge, {\n      key: index,\n      title: tag,\n      backgroundColor: \"#FFEDED\",\n      color: \"#FF5252\"\n    });\n  }))), __jsx(View, {\n    className: \"publish-date\"\n  }, __jsx(Text, {\n    className: \"title\"\n  }, \"Publish date\"), __jsx(Text, {\n    className: \"subtitle\"\n  }, Moment(story.items[0].fields.publishDate).format('LLLL'))))))));\n};\n\nStory.getInitialProps = function _callee(_ref3) {\n  var query, res;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          query = _ref3.query;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(client.getEntries({\n            content_type: 'story',\n            'fields.slug[match]': query.slug\n          }));\n\n        case 3:\n          res = _context.sent;\n          return _context.abrupt(\"return\", {\n            story: res\n          });\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Story;","map":null,"metadata":{},"sourceType":"module"}