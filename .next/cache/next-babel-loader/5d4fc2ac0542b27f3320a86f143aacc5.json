{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/ahroidlife/Documents/nextjs/blog/components/atoms/views/view.jsx\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport StyledView from './view.styles.jsx';\nimport { any, string } from 'prop-types';\n\nvar View = function View(_ref) {\n  var children = _ref.children,\n      style = _ref.style,\n      isEqualFlex = _ref.isEqualFlex,\n      flexValue = _ref.flexValue,\n      direction = _ref.direction,\n      justify = _ref.justify,\n      overflow = _ref.overflow,\n      isBoxShadow = _ref.isBoxShadow,\n      width = _ref.width,\n      isEqualWidth = _ref.isEqualWidth,\n      isEqualHeight = _ref.isEqualHeight,\n      height = _ref.height,\n      radius = _ref.radius,\n      backgroundColor = _ref.backgroundColor,\n      isEqualBackground = _ref.isEqualBackground,\n      isEqualDirection = _ref.isEqualDirection,\n      position = _ref.position,\n      bottom = _ref.bottom,\n      margin = _ref.margin,\n      maxWidth = _ref.maxWidth,\n      top = _ref.top,\n      left = _ref.left,\n      props = _objectWithoutProperties(_ref, [\"children\", \"style\", \"isEqualFlex\", \"flexValue\", \"direction\", \"justify\", \"overflow\", \"isBoxShadow\", \"width\", \"isEqualWidth\", \"isEqualHeight\", \"height\", \"radius\", \"backgroundColor\", \"isEqualBackground\", \"isEqualDirection\", \"position\", \"bottom\", \"margin\", \"maxWidth\", \"top\", \"left\"]);\n\n  return __jsx(StyledView, _extends({\n    style: style,\n    isBoxShadow: isBoxShadow,\n    isEqualFlex: isEqualFlex,\n    width: width,\n    height: height,\n    isEqualWidth: isEqualWidth,\n    isEqualHeight: isEqualHeight,\n    radius: radius,\n    backgroundColor: backgroundColor,\n    isEqualBackground: isEqualBackground,\n    flexValue: flexValue,\n    justify: justify,\n    overflow: overflow,\n    position: position,\n    bottom: bottom,\n    direction: direction,\n    isEqualDirection: isEqualDirection,\n    margin: margin,\n    maxWidth: maxWidth,\n    top: top,\n    left: left\n  }, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }), children);\n};\n\nView.propTypes = {\n  style: any,\n  width: string,\n  height: string,\n  isEqualWidth: string,\n  isEqualHeight: string,\n  isEqualFlex: string,\n  direction: string,\n  isEqualDirection: string,\n  justify: string,\n  flexValue: string,\n  position: string,\n  margin: string,\n  overflow: string,\n  backgroundColor: string,\n  isEqualBackground: string,\n  isBoxShadow: string,\n  radius: string,\n  maxWidth: string,\n  top: string,\n  left: string\n};\nexport default View;","map":{"version":3,"sources":["/Users/ahroidlife/Documents/nextjs/blog/components/atoms/views/view.jsx"],"names":["React","StyledView","any","string","View","children","style","isEqualFlex","flexValue","direction","justify","overflow","isBoxShadow","width","isEqualWidth","isEqualHeight","height","radius","backgroundColor","isEqualBackground","isEqualDirection","position","bottom","margin","maxWidth","top","left","props","propTypes"],"mappings":"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","sourcesContent":["import React from 'react'\n\nimport StyledView from './view.styles.jsx'\nimport { any, string } from 'prop-types'\n\nconst View = ({ \n    children, \n    style, \n    isEqualFlex,\n    flexValue, \n    direction,\n    justify,\n    overflow, \n    isBoxShadow, \n    width, \n    isEqualWidth, \n    isEqualHeight, \n    height, \n    radius, \n    backgroundColor, \n    isEqualBackground,\n    isEqualDirection, \n    position,\n    bottom,\n    margin,\n    maxWidth,\n    top,\n    left,\n    ...props}) => {\n\n    return (\n        <StyledView \n        style={style} \n        isBoxShadow={isBoxShadow} \n        isEqualFlex={isEqualFlex}\n        width={width}\n        height={height}\n        isEqualWidth={isEqualWidth}\n        isEqualHeight={isEqualHeight}\n        radius={radius}\n        backgroundColor={backgroundColor}\n        isEqualBackground={isEqualBackground}\n        flexValue={flexValue}\n        justify={justify}\n        overflow={overflow}\n        position={position}\n        bottom={bottom}\n        direction={direction}\n        isEqualDirection={isEqualDirection}\n        margin={margin}\n        maxWidth={maxWidth}\n        top={top}\n        left={left}\n        {...props}>\n            {children}\n        </StyledView>\n    )\n}\n\nView.propTypes = {\n    style: any,\n    width: string,\n    height: string,\n    isEqualWidth: string,\n    isEqualHeight: string,\n    isEqualFlex: string,\n    direction: string,\n    isEqualDirection: string,\n    justify: string,\n    flexValue: string,\n    position: string,\n    margin: string,\n    overflow: string,\n    backgroundColor: string,\n    isEqualBackground: string,\n    isBoxShadow: string,\n    radius: string,\n    maxWidth: string,\n    top: string,\n    left: string\n}\n\nexport default View"]},"metadata":{},"sourceType":"module"}