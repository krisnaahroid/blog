{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/ahroidlife/Documents/nextjs/blog/components/molecules/forms/textIcon/texticon.jsx\";\n\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { Container, View, Input, Icon, Text } from '../../../atoms';\nimport './styles.scss';\n\nvar client = require('contentful').createClient({\n  space: process.env.SPACE_ID,\n  accessToken: process.env.ACCESS_TOKEN\n});\n\nvar TextIcon = function TextIcon(_ref) {\n  var placeholder = _ref.placeholder,\n      left = _ref.left,\n      props = _ref.props;\n\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      searchTerm = _React$useState2[0],\n      setSearchTerm = _React$useState2[1];\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      searchResults = _React$useState4[0],\n      setSearchResults = _React$useState4[1];\n\n  var handleChange = function handleChange(event) {\n    setSearchTerm(event.target.value);\n  };\n\n  function searching(title) {\n    var entries;\n    return _regeneratorRuntime.async(function searching$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(client.getEntries({\n              content_type: 'story',\n              'fields.title[match]': title\n            }));\n\n          case 2:\n            entries = _context.sent;\n\n            if (!entries.items) {\n              _context.next = 5;\n              break;\n            }\n\n            return _context.abrupt(\"return\", entries.items);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  useEffect(function () {\n    function getResults() {\n      var results;\n      return _regeneratorRuntime.async(function getResults$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(searching(searchTerm));\n\n            case 2:\n              results = _context2.sent;\n              setSearchResults(_toConsumableArray(results));\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    if (searchTerm.length > 2) {\n      getResults();\n    } else {\n      setSearchResults([]);\n    }\n  }, [searchTerm]);\n  return __jsx(Container, {\n    className: \"header-input-search\",\n    position: \"relative\",\n    style: {\n      left: left\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, __jsx(Icon, {\n    name: \"search\",\n    position: \"absolute\",\n    left: \"15px\",\n    top: \"9px\",\n    width: \"1.3em\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }), __jsx(Input, {\n    className: \"inputTextIcon\",\n    placeholder: placeholder,\n    width: \"300px\",\n    padding: \"5px 30px 5px 45px\",\n    value: searchTerm,\n    onChange: handleChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }), __jsx(View, {\n    className: \"search-results\",\n    direction: \"column\",\n    isEqualFlex: \"none\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, __jsx(View, {\n    height: \"30px\",\n    justify: \"space-between\",\n    align: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, __jsx(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }, __jsx(Text, {\n    weight: \"medium\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 25\n    }\n  }, \"Results of \", __jsx(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 58\n    }\n  }, searchTerm))), __jsx(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }, __jsx(View, {\n    className: \"rounded-counter\",\n    justify: \"center\",\n    align: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 25\n    }\n  }, __jsx(Text, {\n    variant: \"secondary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 29\n    }\n  }, \"4\")))), __jsx(View, {\n    flexValue: \"1\",\n    className: \"content\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, searchResults.map(function (item, index) {\n    return __jsx(\"li\", {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 25\n      }\n    }, item.fields.title);\n  })))));\n};\n\nexport default TextIcon;","map":{"version":3,"sources":["/Users/ahroidlife/Documents/nextjs/blog/components/molecules/forms/textIcon/texticon.jsx"],"names":["React","useEffect","Container","View","Input","Icon","Text","client","require","createClient","space","process","env","SPACE_ID","accessToken","ACCESS_TOKEN","TextIcon","placeholder","left","props","useState","searchTerm","setSearchTerm","searchResults","setSearchResults","handleChange","event","target","value","searching","title","getEntries","content_type","entries","items","getResults","results","length","map","item","index","fields"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport {Container, View, Input, Icon, Text} from '../../../atoms'\nimport './styles.scss'\n\n\nconst client = require('contentful').createClient({\n    space: process.env.SPACE_ID,\n    accessToken: process.env.ACCESS_TOKEN\n})\n\nconst TextIcon = ({placeholder, left, props}) => {\n\n        const [searchTerm, setSearchTerm] = React.useState(\"\");\n        const [searchResults, setSearchResults] = React.useState([]);\n\n        const handleChange = event => {\n            setSearchTerm(event.target.value);\n        };\n\n        async function searching(title){\n            const entries = await client.getEntries({\n                content_type: 'story',\n                'fields.title[match]': title\n              })\n            if (entries.items) return entries.items\n        }\n\n        useEffect(() => {\n            async function getResults(){\n                const results = await searching(searchTerm)\n                setSearchResults([...results])\n            }\n            \n            if(searchTerm.length > 2){\n                getResults()\n            }else{\n                setSearchResults([])\n            }\n\n        }, [searchTerm]);\n\n    return (\n        <Container className=\"header-input-search\" position=\"relative\" style={{\n            left: left\n        }}>\n            <Icon name=\"search\" position=\"absolute\" left=\"15px\" top=\"9px\" width=\"1.3em\"/>\n            <Input \n            className=\"inputTextIcon\"\n            placeholder={placeholder} \n            width=\"300px\" \n            padding=\"5px 30px 5px 45px\"\n            value={searchTerm}\n            onChange={handleChange}/>\n\n            <View className=\"search-results\"  direction=\"column\" isEqualFlex=\"none\">\n                <View height=\"30px\" justify=\"space-between\" align=\"center\">\n                    <View>\n                        <Text weight=\"medium\">Results of <strong>{searchTerm}</strong></Text>\n                    </View>\n                    <View>\n                        <View className=\"rounded-counter\" justify=\"center\" align=\"center\">\n                            <Text variant=\"secondary\">4</Text>\n                        </View>\n                    </View>\n                </View>\n                <View flexValue=\"1\" className=\"content\">\n                    <ul>\n                        {searchResults.map((item, index) => (\n                        <li key={index}>{item.fields.title}</li>\n                        ))}\n                    </ul>\n                </View>\n            </View>\n        </Container>\n    )\n}\n\nexport default TextIcon"]},"metadata":{},"sourceType":"module"}