{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/ahroidlife/Documents/nextjs/blog/pages/stories/stories.jsx\";\n\nvar __jsx = React.createElement;\nimport React, { Component, useEffect, useState } from 'react';\nimport { BlogLayout } from \"../../components/templates/layouts\";\nimport { Hero } from '../../components/organisms';\nimport ImageHero from '../../assets/illustrations/daily-stories.svg';\nimport { SliderHero, SliderCategories } from '../../components/organisms';\nimport Router from 'next/router';\nimport { Container, View, Text, Rows } from '../../components/atoms';\nimport { CardStories } from '../../components/molecules';\nimport Knobs from './stories.knobs.json';\nimport { useDispatch } from 'react-redux';\nvar item = Knobs.item,\n    populars = Knobs.populars;\nimport actions from '../../store/modules/stories/actions';\nimport Link from 'next/link';\n\nvar client = require('contentful').createClient({\n  space: process.env.SPACE_ID,\n  accessToken: process.env.ACCESS_TOKEN\n});\n\nvar Stories = function Stories() {\n  var _useState = useState([]),\n      popular = _useState[0],\n      setPopular = _useState[1];\n\n  var _useState2 = useState([]),\n      stories = _useState2[0],\n      setStories = _useState2[1];\n\n  var _useState3 = useState([]),\n      story = _useState3[0],\n      setStory = _useState3[1];\n\n  var dispatch = useDispatch();\n\n  function fetchPopulars() {\n    var entries;\n    return _regeneratorRuntime.async(function fetchPopulars$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(client.getEntries({\n              content_type: 'popularStories'\n            }));\n\n          case 2:\n            entries = _context.sent;\n\n            if (!entries.items) {\n              _context.next = 5;\n              break;\n            }\n\n            return _context.abrupt(\"return\", entries.items);\n\n          case 5:\n            console.log(\"Error getting Entries for \".concat(contentType.name, \".\"));\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function fetchStoryCategories() {\n    var entries;\n    return _regeneratorRuntime.async(function fetchStoryCategories$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(client.getEntries({\n              content_type: 'stories'\n            }));\n\n          case 2:\n            entries = _context2.sent;\n\n            if (!entries.items) {\n              _context2.next = 5;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", entries.items);\n\n          case 5:\n            console.log(\"Error getting Entries for \".concat(contentType.name, \".\"));\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function fetchStories() {\n    var entries;\n    return _regeneratorRuntime.async(function fetchStories$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(client.getEntries({\n              content_type: 'story'\n            }));\n\n          case 2:\n            entries = _context3.sent;\n\n            if (!entries.items) {\n              _context3.next = 5;\n              break;\n            }\n\n            return _context3.abrupt(\"return\", entries.items);\n\n          case 5:\n            console.log(\"Error getting Entries for \".concat(contentType.name, \".\"));\n\n          case 6:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  useEffect(function () {\n    document.body.style.overflow = 'unset';\n\n    function getPopulars() {\n      var allPosts;\n      return _regeneratorRuntime.async(function getPopulars$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return _regeneratorRuntime.awrap(fetchPopulars());\n\n            case 2:\n              allPosts = _context4.sent;\n              setPopular(_toConsumableArray(allPosts));\n\n            case 4:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    function getStoriesCategories() {\n      var allCategories;\n      return _regeneratorRuntime.async(function getStoriesCategories$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return _regeneratorRuntime.awrap(fetchStoryCategories());\n\n            case 2:\n              allCategories = _context5.sent;\n              setStories(_toConsumableArray(allCategories));\n\n            case 4:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    function getStories() {\n      var allStories;\n      return _regeneratorRuntime.async(function getStories$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return _regeneratorRuntime.awrap(fetchStories());\n\n            case 2:\n              allStories = _context6.sent;\n              setStory(_toConsumableArray(allStories));\n\n            case 4:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    getStories();\n    getStoriesCategories();\n    getPopulars();\n  }, []);\n\n  var handleToStory = function handleToStory(story) {\n    return _regeneratorRuntime.async(function handleToStory$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.next = 2;\n            return _regeneratorRuntime.awrap(dispatch(actions.setStory(story)));\n\n          case 2:\n            Router.push(\"/stories/\".concat(story.fields.slug));\n\n          case 3:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return __jsx(BlogLayout, {\n    title: \"Stories\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, __jsx(Hero, {\n    title: \"Stories Resources\",\n    subtitle: \"The more that you read the more things you will know. \",\n    img: ImageHero,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }), __jsx(SliderHero, {\n    items: popular,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }), __jsx(SliderCategories, {\n    items: stories,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }), __jsx(Container, {\n    padding: \"100px\",\n    flexDirection: \"column\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, __jsx(View, {\n    margin: \"0 0 50px 0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, __jsx(Text, {\n    family: \"daily\",\n    size: \"32\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  }, \"Our Stories\")), __jsx(Rows, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, story.map(function (item, index) {\n    return __jsx(View, {\n      key: index,\n      className: \"grid-item-3\",\n      onClick: function onClick() {\n        return handleToStory(item);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 37\n      }\n    }, __jsx(CardStories, _extends({\n      title: item.fields.title,\n      label: item.fields.label,\n      image: item.fields.image.fields.file.url,\n      className: \"card-our-stories\"\n    }, item, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 41\n      }\n    })));\n  }))));\n};\n\nexport default Stories;","map":{"version":3,"sources":["/Users/ahroidlife/Documents/nextjs/blog/pages/stories/stories.jsx"],"names":["React","Component","useEffect","useState","BlogLayout","Hero","ImageHero","SliderHero","SliderCategories","Router","Container","View","Text","Rows","CardStories","Knobs","useDispatch","item","populars","actions","Link","client","require","createClient","space","process","env","SPACE_ID","accessToken","ACCESS_TOKEN","Stories","popular","setPopular","stories","setStories","story","setStory","dispatch","fetchPopulars","getEntries","content_type","entries","items","console","log","contentType","name","fetchStoryCategories","fetchStories","document","body","style","overflow","getPopulars","allPosts","getStoriesCategories","allCategories","getStories","allStories","handleToStory","push","fields","slug","map","index","title","label","image","file","url"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,SAA1B,EAAqCC,QAArC,QAAoD,OAApD;AACA,SAASC,UAAT,QAA2B,oCAA3B;AACA,SAAQC,IAAR,QAAmB,4BAAnB;AACA,OAAOC,SAAP,MAAsB,8CAAtB;AACA,SAAQC,UAAR,EAAoBC,gBAApB,QAA2C,4BAA3C;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,IAA1B,EAAgCC,IAAhC,QAA2C,wBAA3C;AACA,SAASC,WAAT,QAA4B,4BAA5B;AAEA,OAAOC,KAAP,MAAkB,sBAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;IACOC,I,GAAkBF,K,CAAlBE,I;IAAMC,Q,GAAYH,K,CAAZG,Q;AAEb,OAAOC,OAAP,MAAoB,qCAApB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,IAAMC,MAAM,GAAGC,OAAO,CAAC,YAAD,CAAP,CAAsBC,YAAtB,CAAmC;AAC9CC,EAAAA,KAAK,EAAEC,OAAO,CAACC,GAAR,CAAYC,QAD2B;AAE9CC,EAAAA,WAAW,EAAEH,OAAO,CAACC,GAAR,CAAYG;AAFqB,CAAnC,CAAf;;AAKA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAAA,kBACY3B,QAAQ,CAAC,EAAD,CADpB;AAAA,MACX4B,OADW;AAAA,MACFC,UADE;;AAAA,mBAEY7B,QAAQ,CAAC,EAAD,CAFpB;AAAA,MAEX8B,OAFW;AAAA,MAEFC,UAFE;;AAAA,mBAGQ/B,QAAQ,CAAC,EAAD,CAHhB;AAAA,MAGXgC,KAHW;AAAA,MAGJC,QAHI;;AAKlB,MAAMC,QAAQ,GAAGrB,WAAW,EAA5B;;AAEA,WAAesB,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAC0BjB,MAAM,CAACkB,UAAP,CAAkB;AACpCC,cAAAA,YAAY,EAAE;AADsB,aAAlB,CAD1B;;AAAA;AACUC,YAAAA,OADV;;AAAA,iBAIQA,OAAO,CAACC,KAJhB;AAAA;AAAA;AAAA;;AAAA,6CAI8BD,OAAO,CAACC,KAJtC;;AAAA;AAKIC,YAAAA,OAAO,CAACC,GAAR,qCAAyCC,WAAW,CAACC,IAArD;;AALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAQA,WAAeC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAC0B1B,MAAM,CAACkB,UAAP,CAAkB;AACpCC,cAAAA,YAAY,EAAE;AADsB,aAAlB,CAD1B;;AAAA;AACUC,YAAAA,OADV;;AAAA,iBAIQA,OAAO,CAACC,KAJhB;AAAA;AAAA;AAAA;;AAAA,8CAI8BD,OAAO,CAACC,KAJtC;;AAAA;AAKIC,YAAAA,OAAO,CAACC,GAAR,qCAAyCC,WAAW,CAACC,IAArD;;AALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAQA,WAAeE,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAC0B3B,MAAM,CAACkB,UAAP,CAAkB;AACpCC,cAAAA,YAAY,EAAE;AADsB,aAAlB,CAD1B;;AAAA;AACUC,YAAAA,OADV;;AAAA,iBAIQA,OAAO,CAACC,KAJhB;AAAA;AAAA;AAAA;;AAAA,8CAI8BD,OAAO,CAACC,KAJtC;;AAAA;AAKIC,YAAAA,OAAO,CAACC,GAAR,qCAAyCC,WAAW,CAACC,IAArD;;AALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAQA5C,EAAAA,SAAS,CAAC,YAAM;AACZ+C,IAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,QAApB,GAA+B,OAA/B;;AAGA,aAAeC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAC2Bf,aAAa,EADxC;;AAAA;AACUgB,cAAAA,QADV;AAEItB,cAAAA,UAAU,oBAAKsB,QAAL,EAAV;;AAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKA,aAAeC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACgCR,oBAAoB,EADpD;;AAAA;AACUS,cAAAA,aADV;AAEItB,cAAAA,UAAU,oBAAKsB,aAAL,EAAV;;AAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKA,aAAeC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAC6BT,YAAY,EADzC;;AAAA;AACUU,cAAAA,UADV;AAEItB,cAAAA,QAAQ,oBAAKsB,UAAL,EAAR;;AAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKAD,IAAAA,UAAU;AACVF,IAAAA,oBAAoB;AACpBF,IAAAA,WAAW;AACd,GAtBQ,EAsBP,EAtBO,CAAT;;AAwBA,MAAMM,aAAa,GAAG,SAAhBA,aAAgB,CAAOxB,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACZE,QAAQ,CAAClB,OAAO,CAACiB,QAAR,CAAiBD,KAAjB,CAAD,CADI;;AAAA;AAElB1B,YAAAA,MAAM,CAACmD,IAAP,oBAAwBzB,KAAK,CAAC0B,MAAN,CAAaC,IAArC;;AAFkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtB;;AAKA,SACI,MAAC,UAAD;AAAY,IAAA,KAAK,EAAC,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AACI,IAAA,KAAK,EAAC,mBADV;AAEI,IAAA,QAAQ,EAAC,wDAFb;AAGI,IAAA,GAAG,EAAExD,SAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAMI,MAAC,UAAD;AAAY,IAAA,KAAK,EAAEyB,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,EAQI,MAAC,gBAAD;AAAkB,IAAA,KAAK,EAAEE,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,EAUI,MAAC,SAAD;AAAW,IAAA,OAAO,EAAC,OAAnB;AAA2B,IAAA,aAAa,EAAC,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,MAAM,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,MAAM,EAAC,OAAb;AAAqB,IAAA,IAAI,EAAC,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,CADJ,EAII,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQE,KAAK,CAAC4B,GAAN,CAAU,UAAC9C,IAAD,EAAO+C,KAAP;AAAA,WACE,MAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,KAAX;AAAkB,MAAA,SAAS,EAAC,aAA5B;AAA0C,MAAA,OAAO,EAAE;AAAA,eAAML,aAAa,CAAC1C,IAAD,CAAnB;AAAA,OAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,WAAD;AAAa,MAAA,KAAK,EAAEA,IAAI,CAAC4C,MAAL,CAAYI,KAAhC;AAAuC,MAAA,KAAK,EAAEhD,IAAI,CAAC4C,MAAL,CAAYK,KAA1D;AAAkE,MAAA,KAAK,EAAEjD,IAAI,CAAC4C,MAAL,CAAYM,KAAZ,CAAkBN,MAAlB,CAAyBO,IAAzB,CAA8BC,GAAvG;AAA4G,MAAA,SAAS,EAAC;AAAtH,OAA6IpD,IAA7I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ,CADF;AAAA,GAAV,CAFR,CAJJ,CAVJ,CADJ;AA2BH,CAvFD;;AAyFA,eAAea,OAAf","sourcesContent":["import React, {Component, useEffect, useState} from 'react'\nimport { BlogLayout } from \"../../components/templates/layouts\";\nimport {Hero} from '../../components/organisms'\nimport ImageHero from '../../assets/illustrations/daily-stories.svg'\nimport {SliderHero, SliderCategories} from '../../components/organisms'\nimport Router from 'next/router'\nimport { Container, View, Text, Rows} from '../../components/atoms'\nimport { CardStories } from '../../components/molecules'\n\nimport Knobs from './stories.knobs.json'\nimport { useDispatch } from 'react-redux';\nconst {item, populars} = Knobs\n\nimport actions from '../../store/modules/stories/actions'\nimport Link from 'next/link';\n\nconst client = require('contentful').createClient({\n    space: process.env.SPACE_ID,\n    accessToken: process.env.ACCESS_TOKEN\n})\n\nconst Stories = () => {\n    const [popular, setPopular] = useState([])\n    const [stories, setStories] = useState([])\n    const [story, setStory] = useState([])\n\n    const dispatch = useDispatch()\n\n    async function fetchPopulars(){\n        const entries = await client.getEntries({\n            content_type: 'popularStories'\n        })\n        if (entries.items) return entries.items\n        console.log(`Error getting Entries for ${contentType.name}.`)\n    }\n\n    async function fetchStoryCategories(){\n        const entries = await client.getEntries({\n            content_type: 'stories'\n        })\n        if (entries.items) return entries.items\n        console.log(`Error getting Entries for ${contentType.name}.`)\n    }\n    \n    async function fetchStories(){\n        const entries = await client.getEntries({\n            content_type: 'story'\n        })\n        if (entries.items) return entries.items\n        console.log(`Error getting Entries for ${contentType.name}.`)\n    }\n    \n    useEffect(() => {\n        document.body.style.overflow = 'unset';\n        \n\n        async function getPopulars() {\n            const allPosts = await fetchPopulars()\n            setPopular([...allPosts])\n          }\n\n        async function getStoriesCategories(){\n            const allCategories = await fetchStoryCategories()\n            setStories([...allCategories])\n        }\n\n        async function getStories(){\n            const allStories = await fetchStories()\n            setStory([...allStories])\n        }\n\n        getStories()\n        getStoriesCategories()\n        getPopulars()\n    },[])\n\n    const handleToStory = async (story) => {\n        await dispatch(actions.setStory(story))\n        Router.push(`/stories/${story.fields.slug}`)\n    }\n\n    return ( \n        <BlogLayout title=\"Stories\">\n            <Hero\n                title=\"Stories Resources\"\n                subtitle=\"The more that you read the more things you will know. \"\n                img={ImageHero}/>\n\n            <SliderHero items={popular}/>\n\n            <SliderCategories items={stories}/>\n\n            <Container padding=\"100px\" flexDirection=\"column\">\n                <View margin=\"0 0 50px 0\">\n                    <Text family=\"daily\" size=\"32\">Our Stories</Text>\n                </View>\n                <Rows>\n                    {\n                        story.map((item, index) => (\n                                    <View key={index} className=\"grid-item-3\" onClick={() => handleToStory(item)}>\n                                        <CardStories title={item.fields.title} label={item.fields.label}  image={item.fields.image.fields.file.url} className=\"card-our-stories\" {...item}/>\n                                    </View>\n                        ))\n                    }\n                </Rows>\n            </Container>\n        </BlogLayout> \n        )\n}\n\nexport default Stories;"]},"metadata":{},"sourceType":"module"}