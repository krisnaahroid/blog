{"ast":null,"code":"var _jsxFileName = \"/Users/ahroidlife/Documents/nextjs/blog/pages/_app.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect } from 'react';\nimport App from 'next/app';\nimport Router from 'next/router';\nimport { Provider } from 'react-redux';\nimport withRedux from 'next-redux-wrapper';\nimport configureStore from '../store';\nimport NProgress from 'nprogress';\nNProgress.configure({\n  easing: 'ease',\n  speed: 500,\n  showSpinner: false\n});\n\nRouter.onRouteChangeStart = () => {\n  NProgress.start();\n};\n\nRouter.onRouteChangeComplete = () => {\n  NProgress.done();\n};\n\nRouter.onRouteChangeError = () => {\n  NProgress.done();\n};\n\nclass MyApp extends App {\n  componentDidMount() {\n    const handleRouteChange = url => {\n      console.log('App is changing to: ', url);\n    };\n\n    Router.events.on('routeChangeStart', handleRouteChange);\n    return () => {\n      Router.events.off('routeChangeStart', handleRouteChange);\n    };\n  }\n\n  static async getInitialProps({\n    Component,\n    ctx\n  }) {\n    return {\n      pageProps: _objectSpread({}, Component.getInitialProps ? await Component.getInitialProps(ctx) : {})\n    };\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps,\n      store\n    } = this.props;\n    return __jsx(Provider, {\n      store: store,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, __jsx(Component, _extends({}, pageProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default withRedux(configureStore, {\n  debug: true\n})(MyApp);","map":{"version":3,"sources":["/Users/ahroidlife/Documents/nextjs/blog/pages/_app.js"],"names":["React","useEffect","App","Router","Provider","withRedux","configureStore","NProgress","configure","easing","speed","showSpinner","onRouteChangeStart","start","onRouteChangeComplete","done","onRouteChangeError","MyApp","componentDidMount","handleRouteChange","url","console","log","events","on","off","getInitialProps","Component","ctx","pageProps","render","store","props","debug"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,cAAP,MAA2B,UAA3B;AACA,OAAOC,SAAP,MAAsB,WAAtB;AAEAA,SAAS,CAACC,SAAV,CAAoB;AAAEC,EAAAA,MAAM,EAAE,MAAV;AAAkBC,EAAAA,KAAK,EAAE,GAAzB;AAA8BC,EAAAA,WAAW,EAAE;AAA3C,CAApB;;AAEAR,MAAM,CAACS,kBAAP,GAA4B,MAAM;AAChCL,EAAAA,SAAS,CAACM,KAAV;AACD,CAFD;;AAIAV,MAAM,CAACW,qBAAP,GAA+B,MAAM;AACnCP,EAAAA,SAAS,CAACQ,IAAV;AACD,CAFD;;AAIAZ,MAAM,CAACa,kBAAP,GAA4B,MAAM;AAChCT,EAAAA,SAAS,CAACQ,IAAV;AACD,CAFD;;AAIA,MAAME,KAAN,SAAoBf,GAApB,CAAuB;AACtBgB,EAAAA,iBAAiB,GAAE;AAChB,UAAMC,iBAAiB,GAAGC,GAAG,IAAI;AAC/BC,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCF,GAApC;AACD,KAFD;;AAIAjB,IAAAA,MAAM,CAACoB,MAAP,CAAcC,EAAd,CAAiB,kBAAjB,EAAqCL,iBAArC;AACA,WAAO,MAAM;AACXhB,MAAAA,MAAM,CAACoB,MAAP,CAAcE,GAAd,CAAkB,kBAAlB,EAAsCN,iBAAtC;AACD,KAFD;AAGF;;AAEA,eAAaO,eAAb,CAA6B;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,GAA7B,EAAiD;AAC/C,WAAO;AACLC,MAAAA,SAAS,oBACHF,SAAS,CAACD,eAAV,GACA,MAAMC,SAAS,CAACD,eAAV,CAA0BE,GAA1B,CADN,GAEA,EAHG;AADJ,KAAP;AAOD;;AAEDE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEH,MAAAA,SAAF;AAAaE,MAAAA,SAAb;AAAwBE,MAAAA;AAAxB,QAAkC,KAAKC,KAA7C;AACA,WACI,MAAC,QAAD;AAAU,MAAA,KAAK,EAAED,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD,eAAeF,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,CADJ;AAKH;;AA7BsB;;AAiCvB,eAAexB,SAAS,CAACC,cAAD,EAAiB;AAAE2B,EAAAA,KAAK,EAAE;AAAT,CAAjB,CAAT,CAA2ChB,KAA3C,CAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport App from 'next/app';\nimport Router from 'next/router';\nimport {Provider} from 'react-redux';\nimport withRedux from 'next-redux-wrapper';\nimport configureStore from '../store';\nimport NProgress from 'nprogress';\n\nNProgress.configure({ easing: 'ease', speed: 500, showSpinner: false });\n\nRouter.onRouteChangeStart = () => {\n  NProgress.start();\n};\n\nRouter.onRouteChangeComplete = () => {\n  NProgress.done();\n};\n\nRouter.onRouteChangeError = () => {\n  NProgress.done();\n};\n\nclass MyApp extends App{\n componentDidMount(){\n    const handleRouteChange = url => {\n      console.log('App is changing to: ', url)\n    }\n  \n    Router.events.on('routeChangeStart', handleRouteChange)\n    return () => {\n      Router.events.off('routeChangeStart', handleRouteChange)\n    }\n }\n\n  static async getInitialProps({ Component, ctx }) {\n    return {\n      pageProps: {\n        ...(Component.getInitialProps\n          ? await Component.getInitialProps(ctx)\n          : {})\n      }\n    };\n  }\n\n  render() {\n    const { Component, pageProps, store } = this.props;\n    return (\n        <Provider store={store}>\n          <Component {...pageProps} />\n        </Provider>\n    );\n}\n}\n\n\nexport default withRedux(configureStore, { debug: true })(MyApp)\n"]},"metadata":{},"sourceType":"module"}