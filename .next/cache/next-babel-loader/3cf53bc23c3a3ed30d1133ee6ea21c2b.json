{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport StyledText, { StyledLink } from './text.styles.jsx';\nimport Link from 'next/link';\n\nvar Text = function Text(_ref) {\n  var children = _ref.children,\n      href = _ref.href,\n      family = _ref.family,\n      target = _ref.target,\n      variant = _ref.variant,\n      size = _ref.size,\n      weight = _ref.weight,\n      align = _ref.align,\n      isEqualSize = _ref.isEqualSize,\n      isEqualAlign = _ref.isEqualAlign,\n      margin = _ref.margin,\n      width = _ref.width,\n      isEqualMargin = _ref.isEqualMargin,\n      props = _objectWithoutProperties(_ref, [\"children\", \"href\", \"family\", \"target\", \"variant\", \"size\", \"weight\", \"align\", \"isEqualSize\", \"isEqualAlign\", \"margin\", \"width\", \"isEqualMargin\"]);\n\n  if (!href) return __jsx(StyledText, _extends({\n    variant: variant,\n    size: size,\n    weight: weight,\n    align: align,\n    isEqualSize: isEqualSize,\n    isEqualAlign: isEqualAlign,\n    margin: margin,\n    width: width,\n    family: family,\n    isEqualMargin: isEqualMargin\n  }, props), children);\n  return __jsx(Link, {\n    href: href,\n    prefetch: false\n  }, __jsx(StyledLink, {\n    variant: variant,\n    target: target,\n    family: family,\n    size: size,\n    weight: weight\n  }, children));\n};\n\nexport default Text;","map":null,"metadata":{},"sourceType":"module"}