{"ast":null,"code":"import styled from 'styled-components';\nimport breakpoints from '../../particles/breakpoints';\n\nconst isDisplayProperty = props => {\n  switch (props.isEqualFlex) {\n    case \"flex\":\n      return \"flex\";\n      break;\n\n    case \"block\":\n      return \"block\";\n      break;\n\n    case \"inline-block\":\n      return \"inline-block\";\n      break;\n\n    default:\n      return \"flex\";\n      break;\n  }\n};\n\nconst masked = props => {\n  if (props.masked) {\n    return \"hidden\";\n  } else {\n    return \"visible\";\n  }\n};\n\nexport const StyledView = styled.div`\n    display: ${props => isDisplayProperty(props)};\n    flex-direction: ${props => props.direction};\n    flex: ${props => props.flexValue ? '1' : 'none'};\n    justify-content: ${props => props.justify};\n    align-items: ${props => !props.align ? 'none' : props.align};\n    width: ${props => props.width};\n    height: ${props => props.height};\n    background-color: ${props => props.backgroundColor};\n    border-radius: ${props => props.radius};\n    box-shadow: ${props => props.isBoxShadow}; //10px 20px 50px rgba(149, 163, 180, 0.1);\n    overflow: ${props => props.overflow};\n    position: ${props => props.position};\n    padding: ${props => props.padding};\n    margin: ${props => props.margin};\n    box-sizing: border-box;\n    \n\n    @media ${breakpoints.mobileL} {\n        width: ${props => props.isEqualWidth} !important;\n        height: ${props => props.isEqualHeight} !important;\n        background-color: ${props => props.isEqualBackground};\n        flex-direction: ${props => props.isEqualDirection};\n    }\n`;\nexport default StyledView;","map":{"version":3,"sources":["/Users/ahroidlife/Documents/nextjs/blog/components/atoms/views/view.styles.jsx"],"names":["styled","breakpoints","isDisplayProperty","props","isEqualFlex","masked","StyledView","div","direction","flexValue","justify","align","width","height","backgroundColor","radius","isBoxShadow","overflow","position","padding","margin","mobileL","isEqualWidth","isEqualHeight","isEqualBackground","isEqualDirection"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;;AAEA,MAAMC,iBAAiB,GAAGC,KAAK,IAAI;AAE/B,UAAOA,KAAK,CAACC,WAAb;AACI,SAAK,MAAL;AACI,aAAO,MAAP;AACA;;AACJ,SAAK,OAAL;AACI,aAAO,OAAP;AACA;;AACJ,SAAK,cAAL;AACI,aAAO,cAAP;AACA;;AACJ;AACI,aAAO,MAAP;AACA;AAZR;AAcH,CAhBD;;AAkBA,MAAMC,MAAM,GAAGF,KAAK,IAAI;AAEpB,MAAGA,KAAK,CAACE,MAAT,EAAgB;AACZ,WAAO,QAAP;AACH,GAFD,MAEK;AACD,WAAO,SAAP;AACH;AACJ,CAPD;;AASA,OAAO,MAAMC,UAAU,GAAGN,MAAM,CAACO,GAAI;eACtBJ,KAAK,IAAID,iBAAiB,CAACC,KAAD,CAAQ;sBAC3BA,KAAK,IAAIA,KAAK,CAACK,SAAU;YACnCL,KAAK,IAAIA,KAAK,CAACM,SAAN,GAAkB,GAAlB,GAAuB,MAAO;uBAC5BN,KAAK,IAAIA,KAAK,CAACO,OAAQ;mBAC3BP,KAAK,IAAI,CAACA,KAAK,CAACQ,KAAP,GAAe,MAAf,GAAwBR,KAAK,CAACQ,KAAM;aACnDR,KAAK,IAAIA,KAAK,CAACS,KAAM;cACpBT,KAAK,IAAIA,KAAK,CAACU,MAAO;wBACZV,KAAK,IAAIA,KAAK,CAACW,eAAgB;qBAClCX,KAAK,IAAIA,KAAK,CAACY,MAAO;kBACzBZ,KAAK,IAAIA,KAAK,CAACa,WAAY;gBAC7Bb,KAAK,IAAIA,KAAK,CAACc,QAAS;gBACxBd,KAAK,IAAIA,KAAK,CAACe,QAAS;eACzBf,KAAK,IAAIA,KAAK,CAACgB,OAAQ;cACxBhB,KAAK,IAAIA,KAAK,CAACiB,MAAO;;;;aAIvBnB,WAAW,CAACoB,OAAQ;iBAChBlB,KAAK,IAAIA,KAAK,CAACmB,YAAa;kBAC3BnB,KAAK,IAAIA,KAAK,CAACoB,aAAc;4BACnBpB,KAAK,IAAIA,KAAK,CAACqB,iBAAkB;0BACnCrB,KAAK,IAAIA,KAAK,CAACsB,gBAAiB;;CAtBnD;AA0BP,eAAenB,UAAf","sourcesContent":["import styled from 'styled-components'\nimport breakpoints from '../../particles/breakpoints'\n\nconst isDisplayProperty = props => {\n\n    switch(props.isEqualFlex){\n        case \"flex\":\n            return \"flex\";\n            break;\n        case \"block\":\n            return \"block\";\n            break;\n        case \"inline-block\":\n            return \"inline-block\";\n            break;\n        default: \n            return \"flex\"\n            break\n    }\n}\n\nconst masked = props => {\n\n    if(props.masked){\n        return \"hidden\";\n    }else{\n        return \"visible\";\n    }\n}\n\nexport const StyledView = styled.div`\n    display: ${props => isDisplayProperty(props)};\n    flex-direction: ${props => props.direction};\n    flex: ${props => props.flexValue ? '1': 'none'};\n    justify-content: ${props => props.justify};\n    align-items: ${props => !props.align ? 'none' : props.align};\n    width: ${props => props.width};\n    height: ${props => props.height};\n    background-color: ${props => props.backgroundColor};\n    border-radius: ${props => props.radius};\n    box-shadow: ${props => props.isBoxShadow}; //10px 20px 50px rgba(149, 163, 180, 0.1);\n    overflow: ${props => props.overflow};\n    position: ${props => props.position};\n    padding: ${props => props.padding};\n    margin: ${props => props.margin};\n    box-sizing: border-box;\n    \n\n    @media ${breakpoints.mobileL} {\n        width: ${props => props.isEqualWidth} !important;\n        height: ${props => props.isEqualHeight} !important;\n        background-color: ${props => props.isEqualBackground};\n        flex-direction: ${props => props.isEqualDirection};\n    }\n`\n\nexport default StyledView"]},"metadata":{},"sourceType":"module"}