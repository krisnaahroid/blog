{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    @font-face {\\n        font-family: 'Daily';\\n        url(\", \") format('woff2'),\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport styled, { createGlobalStyle } from 'styled-components';\nimport breakpoints from '../../particles/breakpoints';\nimport daily from '../../../assets/fonts/daily.otf';\ncreateGlobalStyle(_templateObject(), daily);\n\nvar color = function color(props) {\n  if (!props.variant) return \"#403e3e\";\n\n  switch (props.variant) {\n    case \"primary\":\n      return \"#403e3e\";\n      break;\n\n    case \"secondary\":\n      return \"#F7FBFF\";\n\n    default:\n      return \"#403e3e\";\n      break;\n  }\n};\n\nvar size = function size(props) {\n  if (!props.size) return \"14\";\n  return props.size;\n};\n\nvar weight = function weight(props) {\n  if (!props.weight) return \"400\";\n\n  switch (props.weight) {\n    case \"light\":\n      return \"300\";\n      break;\n\n    case \"regular\":\n      return \"400\";\n      break;\n\n    case \"medium\":\n      return \"500\";\n      break;\n\n    case \"semi-bold\":\n      return \"600\";\n      break;\n\n    case \"bold\":\n      return \"700\";\n\n    default:\n      break;\n  }\n};\n\nvar StyledText = styled.p.withConfig({\n  displayName: \"textstyles__StyledText\",\n  componentId: \"sc-1c7yjdi-0\"\n})([\"font-family:'Montserrat',sans-serif;font-weight:\", \";font-size:\", \"px;text-align:\", \";color:\", \";@media \", \"{font-size:\", \"px !important;text-align:\", \"px !important;}\"], function (props) {\n  return weight(props);\n}, function (props) {\n  return size(props);\n}, function (props) {\n  return !props.align ? 'left' : props.align;\n}, function (props) {\n  return color(props);\n}, breakpoints.mobileL, function (props) {\n  return props.isEqualSize;\n}, function (props) {\n  return props.isEqualAlign;\n});\nexport var StyledLink = styled.a.withConfig({\n  displayName: \"textstyles__StyledLink\",\n  componentId: \"sc-1c7yjdi-1\"\n})([\"font-family:'Montserrat',sans-serif;font-weight:500;font-size:14px;text-align:left;color:#1e2127;text-decoration:none;\"]);\nexport default StyledText;","map":{"version":3,"sources":["/Users/ahroidlife/Documents/nextjs/blog/components/atoms/texts/text.styles.jsx"],"names":["styled","createGlobalStyle","breakpoints","daily","color","props","variant","size","weight","StyledText","p","align","mobileL","isEqualSize","isEqualAlign","StyledLink","a"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,MAAP,IAAgBC,iBAAhB,QAAwC,mBAAxC;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AAEA,OAAOC,KAAP,MAAkB,iCAAlB;AAEAF,iBAAiB,oBAGHE,KAHG,CAAjB;;AAOA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,KAAK,EAAI;AACnB,MAAG,CAACA,KAAK,CAACC,OAAV,EAAmB,OAAO,SAAP;;AACnB,UAAQD,KAAK,CAACC,OAAd;AACI,SAAK,SAAL;AACI,aAAO,SAAP;AACA;;AACJ,SAAK,WAAL;AACI,aAAO,SAAP;;AACJ;AACI,aAAO,SAAP;AACA;AARR;AAUH,CAZD;;AAcA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAAAF,KAAK,EAAI;AAClB,MAAG,CAACA,KAAK,CAACE,IAAV,EAAgB,OAAO,IAAP;AAChB,SAAOF,KAAK,CAACE,IAAb;AACH,CAHD;;AAKA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAH,KAAK,EAAI;AACpB,MAAG,CAACA,KAAK,CAACG,MAAV,EAAkB,OAAO,KAAP;;AAClB,UAAQH,KAAK,CAACG,MAAd;AACI,SAAK,OAAL;AACI,aAAO,KAAP;AACA;;AACJ,SAAK,SAAL;AACI,aAAO,KAAP;AACA;;AACJ,SAAK,QAAL;AACI,aAAO,KAAP;AACA;;AACJ,SAAK,WAAL;AACI,aAAO,KAAP;AACA;;AACJ,SAAK,MAAL;AACI,aAAO,KAAP;;AAEJ;AACI;AAjBR;AAmBH,CArBD;;AAuBA,IAAMC,UAAU,GAAGT,MAAM,CAACU,CAAV;AAAA;AAAA;AAAA,gLAEG,UAAAL,KAAK;AAAA,SAAIG,MAAM,CAACH,KAAD,CAAV;AAAA,CAFR,EAGC,UAAAA,KAAK;AAAA,SAAIE,IAAI,CAACF,KAAD,CAAR;AAAA,CAHN,EAIE,UAAAA,KAAK;AAAA,SAAI,CAACA,KAAK,CAACM,KAAP,GAAe,MAAf,GAAwBN,KAAK,CAACM,KAAlC;AAAA,CAJP,EAKH,UAAAN,KAAK;AAAA,SAAID,KAAK,CAACC,KAAD,CAAT;AAAA,CALF,EAOHH,WAAW,CAACU,OAPT,EAQK,UAAAP,KAAK;AAAA,SAAIA,KAAK,CAACQ,WAAV;AAAA,CARV,EASM,UAAAR,KAAK;AAAA,SAAIA,KAAK,CAACS,YAAV;AAAA,CATX,CAAhB;AAaA,OAAO,IAAMC,UAAU,GAAGf,MAAM,CAACgB,CAAV;AAAA;AAAA;AAAA,8HAAhB;AASP,eAAeP,UAAf","sourcesContent":["import styled, {createGlobalStyle} from 'styled-components'\nimport breakpoints from '../../particles/breakpoints'\n\nimport daily from '../../../assets/fonts/daily.otf'\n\ncreateGlobalStyle`\n    @font-face {\n        font-family: 'Daily';\n        url(${daily}) format('woff2'),\n    }\n`;\n\nconst color = props => {\n    if(!props.variant) return \"#403e3e\"\n    switch (props.variant) {\n        case \"primary\":\n            return \"#403e3e\"\n            break;\n        case \"secondary\":\n            return \"#F7FBFF\"\n        default:\n            return \"#403e3e\"\n            break;\n    }\n}\n\nconst size = props => {\n    if(!props.size) return \"14\"\n    return props.size\n}\n\nconst weight = props => {\n    if(!props.weight) return \"400\"\n    switch (props.weight) {\n        case \"light\":\n            return \"300\"\n            break;\n        case \"regular\":\n            return \"400\"\n            break;\n        case \"medium\":\n            return \"500\"\n            break;\n        case \"semi-bold\":\n            return \"600\"\n            break;\n        case \"bold\":\n            return \"700\"\n    \n        default:\n            break;\n    }\n}\n\nconst StyledText = styled.p`\n    font-family: 'Montserrat', sans-serif;\n    font-weight: ${props => weight(props)};\n    font-size: ${props => size(props)}px;\n    text-align: ${props => !props.align ? 'left' : props.align};\n    color: ${props => color(props)};\n\n    @media ${breakpoints.mobileL} {\n        font-size: ${props => props.isEqualSize}px !important;\n        text-align: ${props => props.isEqualAlign}px !important;\n    }\n`\n\nexport const StyledLink = styled.a`\n    font-family: 'Montserrat', sans-serif;\n    font-weight: 500;\n    font-size: 14px;\n    text-align: left;\n    color: #1e2127;\n    text-decoration: none;\n`\n\nexport default StyledText"]},"metadata":{},"sourceType":"module"}