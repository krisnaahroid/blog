{"version":3,"file":"static/webpack/static/development/pages/stories.js.30be0e01313502d869eb.hot-update.js","sources":["webpack:///./pages/stories/stories.jsx"],"sourcesContent":["import React, {Component, useEffect, useState} from 'react'\nimport { BlogLayout } from \"../../components/templates/layouts\";\nimport {Hero} from '../../components/organisms'\nimport ImageHero from '../../assets/illustrations/daily-stories.svg'\nimport {SliderHero, SliderCategories} from '../../components/organisms'\nimport Router from 'next/router'\nimport { Container, View, Text, Rows} from '../../components/atoms'\nimport { CardStories } from '../../components/molecules'\n\nimport Knobs from './stories.knobs.json'\nimport { useDispatch } from 'react-redux';\nconst {item, populars} = Knobs\n\nimport actions from '../../store/modules/stories/actions'\nimport Link from 'next/link';\n\nconst client = require('contentful').createClient({\n    space: process.env.SPACE_ID,\n    accessToken: process.env.ACCESS_TOKEN\n})\n\nconst Stories = () => {\n    const [popular, setPopular] = useState([])\n    const [stories, setStories] = useState([])\n    const [story, setStory] = useState([])\n\n    const dispatch = useDispatch()\n\n    async function fetchPopulars(){\n        const entries = await client.getEntries({\n            content_type: 'popularStories'\n        })\n        if (entries.items) return entries.items\n        console.log(`Error getting Entries for ${contentType.name}.`)\n    }\n\n    async function fetchStoryCategories(){\n        const entries = await client.getEntries({\n            content_type: 'stories'\n        })\n        if (entries.items) return entries.items\n        console.log(`Error getting Entries for ${contentType.name}.`)\n    }\n    \n    async function fetchStories(){\n        const entries = await client.getEntries({\n            content_type: 'story'\n        })\n        if (entries.items) return entries.items\n        console.log(`Error getting Entries for ${contentType.name}.`)\n    }\n    \n    useEffect(() => {\n        document.body.style.overflow = 'unset';\n        \n\n        async function getPopulars() {\n            const allPosts = await fetchPopulars()\n            setPopular([...allPosts])\n          }\n\n        async function getStoriesCategories(){\n            const allCategories = await fetchStoryCategories()\n            setStories([...allCategories])\n        }\n\n        async function getStories(){\n            const allStories = await fetchStories()\n            setStory([...allStories])\n        }\n\n        getStories()\n        getStoriesCategories()\n        getPopulars()\n    },[])\n\n    return ( \n        <BlogLayout title=\"Stories\">\n            <Hero\n                title=\"Stories Resources\"\n                subtitle=\"The more that you read the more things you will know. \"\n                img={ImageHero}/>\n\n            <SliderHero items={popular}/>\n\n            <SliderCategories items={stories}/>\n\n            <Container padding=\"100px\" flexDirection=\"column\">\n                <View margin=\"0 0 50px 0\">\n                    <Text family=\"daily\" size=\"32\">Our Stories</Text>\n                </View>\n                <Rows>\n                    {\n                        story.map((item, index) => (\n                            <Link href={`/stories/${item.fields.slug}`}>\n                                <a>\n                                    <View key={index} className=\"grid-item-3\" onClick={() => dispatch(actions.setStory(item))}>\n                                        <CardStories title={item.fields.title} label={item.fields.label}  image={item.fields.image.fields.file.url} className=\"card-our-stories\" {...item}/>\n                                    </View>\n                                </a>\n                            </Link>\n                        ))\n                    }\n                </Rows>\n            </Container>\n        </BlogLayout> \n        )\n}\n\nexport default Stories;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AADA;AACA;AAFA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAKA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AADA;AACA;AAFA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAKA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AADA;AACA;AAFA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAKA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAOA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAcA;AACA;AACA;;;;A","sourceRoot":""}