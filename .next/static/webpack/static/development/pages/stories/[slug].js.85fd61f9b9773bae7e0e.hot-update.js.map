{"version":3,"file":"static/webpack/static/development/pages/stories/[slug].js.85fd61f9b9773bae7e0e.hot-update.js","sources":["webpack:///./pages/stories/[slug].jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { BlogLayout } from \"../../components/templates/layouts\";\nimport { Container, View, Text, Image, Badge} from '../../components/atoms'\n\nimport './stories.scss'\nimport Link from 'next/link';\nimport { useRouter } from 'next/dist/client/router';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as Markdown from 'react-markdown'\nimport { documentToHtmlString } from '@contentful/rich-text-html-renderer';\nimport { documentToReactComponents } from '@contentful/rich-text-react-renderer';\nimport { BLOCKS, MARKS } from '@contentful/rich-text-types';\nimport actions from '../../store/modules/stories/actions'\n\nimport { NextSeo } from 'next-seo';\n\nconst Bold = ({ children }) => <p className=\"bold\">{children}</p>;\n\nconst client = require('contentful').createClient({\n    space: process.env.SPACE_ID,\n    accessToken: process.env.ACCESS_TOKEN\n})\n\n\nconst Story = ({story}) => {\n\n    const options = {\n        renderMark: {\n          [MARKS.BOLD]: text => <Text>{text}</Text>,\n        },\n        renderNode: {\n          [BLOCKS.PARAGRAPH]: (node, children) => <Text variant=\"grey\">{children}</Text>,\n          [BLOCKS.EMBEDDED_ASSET]: node => {\n            // console.log(node)\n            let { description, title, file } = node.data.target.fields\n\n            return <img src={file.url} />\n          },\n        },\n        renderText: text => {\n            return text.split('\\n').reduce((children, textSegment, index) => {\n              return [...children, index > 0 && <br key={index} />, textSegment];\n            }, []);\n          },\n      };\n\n    const content = documentToReactComponents(story.items[0].fields.body, options)\n      \n    return (\n        <>\n        <NextSeo\n            openGraph={{\n                title: story.items[0].fields.title,\n                description: story.items[0].fields.subtitle,\n                url: `https://ahroidlife.com/stories/${story.items[0].fields.slug}`,\n                type: 'article',\n                article: {\n                authors: [\n                    story.items[0].fields.author.fields.name,\n                ],\n                tags: [story.items[0].fields.tags],\n                },\n                images: [\n                {\n                    url: `https:${story.items[0].fields.heroImage.fields.file.url}`,\n                    width: story.items[0].fields.heroImage.fields.file.details.image.width,\n                    height: story.items[0].fields.heroImage.fields.file.details.image.height,\n                    alt: story.items[0].fields.heroImage.fields.file.title,\n                },\n                ],\n            }}\n            />\n            <BlogLayout>\n                <Container className=\"story-container\">\n                    <View className=\"story-content\" direction=\"column\">\n                        <Link href=\"/stories\">\n                            <a>\n                                <View className=\"story-close-btn\">\n                                    <Image src=\"/static/illustrations/close-dark.svg\"/>\n                                </View>\n                            </a>\n                        </Link>\n                        <View className=\"story-content-header\">\n                            <h1 className=\"title\">{story.items[0].fields.title}</h1>\n                            <Text className=\"subtitle\" family=\"quicksand\">{story.items[0].fields.subtitle}</Text>\n                            <Image src={`https:${story.items[0].fields.heroImage.fields.file.url}`} className=\"hero-image\"/>\n                        </View>\n                        <View className=\"story-content-body\" direction=\"column\">\n                            {/* <Markdown source={content} /> */}\n                            {content}\n                        </View>\n                        <View className=\"story-content-footer\">\n                            <View className=\"tags-wrapper\">\n                                <Text className=\"title\">Tags</Text>\n                                <View className=\"tags\">\n                                    <Badge \n                                    title=\"Storybook\"\n                                    backgroundColor=\"#FFEDED\"\n                                    color=\"#FF5252\"/>\n                                    <Badge \n                                    title=\"React\"\n                                    backgroundColor=\"#FFEDED\"\n                                    color=\"#FF5252\"/>\n                                </View>\n                            </View>\n                            <View className=\"publish-date\">\n                                <Text className=\"title\">Publish date</Text>\n                                <Text className=\"subtitle\">2020-04-28 14:50:00</Text>\n                            </View>\n                        </View>\n                    </View>\n                </Container>\n            </BlogLayout>\n        </>\n    )\n}\n\nStory.getInitialProps = async ({ query }) => {\n    const res = await client.getEntries({\n        content_type: 'story',\n        'fields.slug[match]': query.slug\n    })\n    \n    return { story: res }\n  }\n\nexport default Story"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AACA;AAKA;AAAA;AACA;AADA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AADA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAjBA;AAoBA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAJA;AAMA;AAEA;AACA;AACA;AACA;AAJA;AAZA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AACA;AAFA;AACA;AADA;AAMA;AAAA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAQA;;;;A","sourceRoot":""}